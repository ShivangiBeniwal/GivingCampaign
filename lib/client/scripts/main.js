(()=>{var e={303:e=>{window,e.exports=function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=19)}([function(e,t,n){"use strict";var r=this&&this.__spreadArray||function(e,t,n){if(n||2===arguments.length)for(var r,o=0,i=t.length;o<i;o++)!r&&o in t||((r=r||Array.prototype.slice.call(t,0,o))[o]=t[o]);return e.concat(r||Array.prototype.slice.call(t))};Object.defineProperty(t,"__esModule",{value:!0}),t.sendMessageEventToChild=t.waitForMessageQueue=t.sendMessageToParent=t.uninitializeCommunication=t.initializeCommunication=t.Communication=void 0;var o=n(4),i=n(6),a=n(3),s=function(){};t.Communication=s;var l=function(){function e(){}return e.parentMessageQueue=[],e.childMessageQueue=[],e.nextMessageId=0,e.callbacks={},e}();function u(e,t,n){var r;t instanceof Function?n=t:t instanceof Array&&(r=t),t=s.parentWindow,e=function(e,t){return{id:l.nextMessageId++,func:e,timestamp:Date.now(),args:t||[]}}(e,r),i.GlobalVars.isFramelessWindow?s.currentWindow&&s.currentWindow.nativeInterface&&s.currentWindow.nativeInterface.framelessPostMessage(JSON.stringify(e)):(r=p(t),t&&r?t.postMessage(e,r):f(t).push(e)),n&&(l.callbacks[e.id]=n)}function c(e){var t,n;e&&e.data&&"object"==typeof e.data&&function(e,t){return(!s.currentWindow||e!==s.currentWindow)&&(s.currentWindow&&s.currentWindow.location&&t&&t===s.currentWindow.location.origin||!!(o.validOriginRegExp.test(t.toLowerCase())||i.GlobalVars.additionalValidOriginsRegexp&&i.GlobalVars.additionalValidOriginsRegexp.test(t.toLowerCase())))}(t=e.source||e.originalEvent&&e.originalEvent.source,n=e.origin||e.originalEvent&&e.originalEvent.origin)&&(function(e,t){i.GlobalVars.isFramelessWindow||s.parentWindow&&!s.parentWindow.closed&&e!==s.parentWindow?s.childWindow&&!s.childWindow.closed&&e!==s.childWindow||(s.childWindow=e,s.childOrigin=t):(s.parentWindow=e,s.parentOrigin=t),s.parentWindow&&s.parentWindow.closed&&(s.parentWindow=null,s.parentOrigin=null),s.childWindow&&s.childWindow.closed&&(s.childWindow=null,s.childOrigin=null),m(s.parentWindow),m(s.childWindow)}(t,n),t===s.parentWindow?d(e):t===s.childWindow&&function(e){var t,n;"id"in e.data&&"func"in e.data&&(t=e.data,e=(n=(0,a.callHandler)(t.func,t.args))[0],n=n[1],e&&void 0!==n?g(t.id,Array.isArray(n)?n:[n]):u(t.func,t.args,(function(){for(var e,n=[],r=0;r<arguments.length;r++)n[r]=arguments[r];s.childWindow&&(e=n.pop(),g(t.id,n,e))})))}(e))}function d(e){var t,n;"id"in e.data&&"number"==typeof e.data.id?(n=e.data,(t=l.callbacks[n.id])&&(t.apply(null,r(r([],n.args,!0),[n.isPartialResponse],!1)),function(e){return!0===e.data.isPartialResponse}(e)||delete l.callbacks[n.id])):"func"in e.data&&"string"==typeof e.data.func&&(n=e.data,(0,a.callHandler)(n.func,n.args))}function f(e){return e===s.parentWindow?l.parentMessageQueue:e===s.childWindow?l.childMessageQueue:[]}function p(e){return e===s.parentWindow?s.parentOrigin:e===s.childWindow?s.childOrigin:null}function m(e){for(var t=p(e),n=f(e);e&&t&&0<n.length;)e.postMessage(n.shift(),t)}function g(e,t,n){var r=s.childWindow;t=function(e,t,n){return{id:e,args:t||[],isPartialResponse:n}}(e,t,n),n=p(r),r&&n&&r.postMessage(t,n)}t.initializeCommunication=function(e,t){l.messageListener=function(e){return c(e)},s.currentWindow=s.currentWindow||window,((s.parentWindow=s.currentWindow.parent!==s.currentWindow.self?s.currentWindow.parent:s.currentWindow.opener)||t)&&s.currentWindow.addEventListener("message",l.messageListener,!1),s.parentWindow||(i.GlobalVars.isFramelessWindow=!0,window.onNativeMessage=d);try{s.parentOrigin="*",u("initialize",[o.version],e)}finally{s.parentOrigin=null}},t.uninitializeCommunication=function(){s.currentWindow.removeEventListener("message",l.messageListener,!1),s.parentWindow=null,s.parentOrigin=null,s.childWindow=null,s.childOrigin=null,l.parentMessageQueue=[],l.childMessageQueue=[],l.nextMessageId=0,l.callbacks={}},t.sendMessageToParent=u,t.waitForMessageQueue=function(e,t){var n=s.currentWindow.setInterval((function(){0===f(e).length&&(clearInterval(n),t())}),100)},t.sendMessageEventToChild=function(e,t){var n=s.childWindow;e=function(e,t){return{func:e,args:t||[]}}(e,t),t=p(n),n&&t?n.postMessage(e,t):f(n).push(e)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.processAdditionalValidOrigins=t.isAPISupportedByPlatform=t.ensureInitialized=void 0;var r=n(4),o=n(6),i=n(5);t.ensureInitialized=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];if(!o.GlobalVars.initializeCalled)throw new Error("The library has not yet been initialized");if(o.GlobalVars.frameContext&&e&&0<e.length){for(var n=!1,r=0;r<e.length;r++)if(e[r]===o.GlobalVars.frameContext){n=!0;break}if(!n)throw new Error("This call is not allowed in the '"+o.GlobalVars.frameContext+"' context")}},t.isAPISupportedByPlatform=function(e){return void 0===e&&(e=r.defaultSDKVersionForCompatCheck),e=(0,i.compareSDKVersions)(o.GlobalVars.clientSupportedSDKVersion,e),!isNaN(e)&&0<=e},t.processAdditionalValidOrigins=function(e){e=o.GlobalVars.additionalValidOrigins.concat(e.filter((function(e){return"string"==typeof e&&r.userOriginUrlValidationRegExp.test(e)})));var t={};e=e.filter((function(e){return!t[e]&&(t[e]=!0)})),o.GlobalVars.additionalValidOrigins=e,0<o.GlobalVars.additionalValidOrigins.length?o.GlobalVars.additionalValidOriginsRegexp=(0,i.generateRegExpFromUrls)(o.GlobalVars.additionalValidOrigins):o.GlobalVars.additionalValidOriginsRegexp=null}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ChannelType=t.TaskModuleDimension=t.UserTeamRole=t.TeamType=t.FrameContexts=t.HostClientType=void 0,function(e){e.desktop="desktop",e.web="web",e.android="android",e.ios="ios",e.rigel="rigel",e.surfaceHub="surfaceHub",e.teamsRoomsWindows="teamsRoomsWindows",e.teamsRoomsAndroid="teamsRoomsAndroid",e.teamsPhones="teamsPhones",e.teamsDisplays="teamsDisplays"}(t.HostClientType||(t.HostClientType={})),function(e){e.settings="settings",e.content="content",e.authentication="authentication",e.remove="remove",e.task="task",e.sidePanel="sidePanel",e.stage="stage",e.meetingStage="meetingStage"}(t.FrameContexts||(t.FrameContexts={})),function(e){e[e.Standard=0]="Standard",e[e.Edu=1]="Edu",e[e.Class=2]="Class",e[e.Plc=3]="Plc",e[e.Staff=4]="Staff"}(t.TeamType||(t.TeamType={})),function(e){e[e.Admin=0]="Admin",e[e.User=1]="User",e[e.Guest=2]="Guest"}(t.UserTeamRole||(t.UserTeamRole={})),function(e){e.Large="large",e.Medium="medium",e.Small="small"}(t.TaskModuleDimension||(t.TaskModuleDimension={})),function(e){e.Regular="Regular",e.Private="Private",e.Shared="Shared"}(t.ChannelType||(t.ChannelType={}))},function(e,t,n){"use strict";var r=this&&this.__spreadArray||function(e,t,n){if(n||2===arguments.length)for(var r,o=0,i=t.length;o<i;o++)!r&&o in t||((r=r||Array.prototype.slice.call(t,0,o))[o]=t[o]);return e.concat(r||Array.prototype.slice.call(t))};Object.defineProperty(t,"__esModule",{value:!0}),t.registerBeforeUnloadHandler=t.registerOnLoadHandler=t.registerFocusEnterHandler=t.registerBackButtonHandler=t.handleThemeChange=t.registerOnThemeChangeHandler=t.removeHandler=t.registerHandler=t.callHandler=t.initializeHandlers=void 0;var o=n(8),i=n(0),a=function(){function e(){}return e.handlers={},e}();function s(e){a.themeChangeHandler&&a.themeChangeHandler(e),i.Communication.childWindow&&(0,i.sendMessageEventToChild)("themeChange",[e])}function l(){a.backButtonPressHandler&&a.backButtonPressHandler()||(0,o.navigateBack)()}function u(e){a.focusEnterHandler&&a.focusEnterHandler(e)}function c(e){a.loadHandler&&a.loadHandler(e),i.Communication.childWindow&&(0,i.sendMessageEventToChild)("load",[e])}function d(){function e(){(0,i.sendMessageToParent)("readyToUnload",[])}a.beforeUnloadHandler&&a.beforeUnloadHandler(e)||e()}t.initializeHandlers=function(){a.handlers.themeChange=s,a.handlers.backButtonPress=l,a.handlers.load=c,a.handlers.beforeUnload=d,a.handlers.focusEnter=u},t.callHandler=function(e,t){return(e=a.handlers[e])?[!0,e.apply(this,t)]:[!1,void 0]},t.registerHandler=function(e,t,n,o){void 0===n&&(n=!0),void 0===o&&(o=[]),t?(a.handlers[e]=t,n&&(0,i.sendMessageToParent)("registerHandler",r([e],o,!0))):delete a.handlers[e]},t.removeHandler=function(e){delete a.handlers[e]},t.registerOnThemeChangeHandler=function(e){(a.themeChangeHandler=e)&&(0,i.sendMessageToParent)("registerHandler",["themeChange"])},t.handleThemeChange=s,t.registerBackButtonHandler=function(e){(a.backButtonPressHandler=e)&&(0,i.sendMessageToParent)("registerHandler",["backButton"])},t.registerFocusEnterHandler=function(e){(a.focusEnterHandler=e)&&(0,i.sendMessageToParent)("registerHandler",["focusEnter"])},t.registerOnLoadHandler=function(e){(a.loadHandler=e)&&(0,i.sendMessageToParent)("registerHandler",["load"])},t.registerBeforeUnloadHandler=function(e){(a.beforeUnloadHandler=e)&&(0,i.sendMessageToParent)("registerHandler",["beforeUnload"])}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.userOriginUrlValidationRegExp=t.validOriginRegExp=t.validOrigins=t.scanBarCodeAPIMobileSupportVersion=t.getMediaCallbackSupportVersion=t.mediaAPISupportVersion=t.captureImageMobileSupportVersion=t.peoplePickerRequiredVersion=t.locationAPIsRequiredVersion=t.getUserJoinedTeamsSupportedAndroidClientVersion=t.videoAndImageMediaAPISupportVersion=t.defaultSDKVersionForCompatCheck=t.version=void 0,n=n(5),t.version="1.11.0",t.defaultSDKVersionForCompatCheck="2.0.1",t.videoAndImageMediaAPISupportVersion="2.0.2",t.getUserJoinedTeamsSupportedAndroidClientVersion="2.0.1",t.locationAPIsRequiredVersion="1.9.0",t.peoplePickerRequiredVersion="2.0.0",t.captureImageMobileSupportVersion="1.7.0",t.mediaAPISupportVersion="1.8.0",t.getMediaCallbackSupportVersion="2.0.0",t.scanBarCodeAPIMobileSupportVersion="1.9.0",t.validOrigins=["https://teams.microsoft.com","https://teams.microsoft.us","https://gov.teams.microsoft.us","https://dod.teams.microsoft.us","https://int.teams.microsoft.com","https://teams.live.com","https://devspaces.skype.com","https://ssauth.skype.com","https://local.teams.live.com","https://local.teams.live.com:8080","https://local.teams.office.com","https://local.teams.office.com:8080","https://msft.spoppe.com","https://*.sharepoint.com","https://*.sharepoint-df.com","https://*.sharepointonline.com","https://outlook.office.com","https://outlook-sdf.office.com","https://*.teams.microsoft.com","https://www.office.com","https://word.office.com","https://excel.office.com","https://powerpoint.office.com","https://www.officeppe.com","https://*.www.office.com"],t.validOriginRegExp=(0,n.generateRegExpFromUrls)(t.validOrigins),t.userOriginUrlValidationRegExp=/^https\:\/\//},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.generateGUID=t.compareSDKVersions=t.getGenericOnCompleteHandler=t.generateRegExpFromUrls=void 0;var r=n(22);function o(e){for(var t="^",n=e.split("."),r=0;r<n.length;r++)t+=(0<r?"[.]":"")+n[r].replace("*","[^/^.]+");return t+"$"}t.generateRegExpFromUrls=function(e){for(var t="",n=0;n<e.length;n++)t+=(0===n?"":"|")+o(e[n]);return new RegExp(t)},t.getGenericOnCompleteHandler=function(e){return function(t,n){if(!t)throw new Error(e||n)}},t.compareSDKVersions=function(e,t){if("string"!=typeof e||"string"!=typeof t)return NaN;var n=e.split("."),r=t.split(".");function o(e){return/^\d+$/.test(e)}if(!n.every(o)||!r.every(o))return NaN;for(;n.length<r.length;)n.push("0");for(;r.length<n.length;)r.push("0");for(var i=0;i<n.length;++i)if(Number(n[i])!=Number(r[i]))return Number(n[i])>Number(r[i])?1:-1;return 0},t.generateGUID=function(){return r.v4()}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.GlobalVars=void 0;var r=function(){function e(){}return e.initializeCalled=!1,e.initializeCompleted=!1,e.additionalValidOrigins=[],e.additionalValidOriginsRegexp=null,e.initializeCallbacks=[],e.isFramelessWindow=!1,e.printCapabilityEnabled=!1,e}();t.GlobalVars=r},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ErrorCode=t.FileOpenPreference=void 0,function(e){e.Inline="inline",e.Desktop="desktop",e.Web="web"}(t.FileOpenPreference||(t.FileOpenPreference={})),function(e){e[e.NOT_SUPPORTED_ON_PLATFORM=100]="NOT_SUPPORTED_ON_PLATFORM",e[e.INTERNAL_ERROR=500]="INTERNAL_ERROR",e[e.NOT_SUPPORTED_IN_CURRENT_CONTEXT=501]="NOT_SUPPORTED_IN_CURRENT_CONTEXT",e[e.PERMISSION_DENIED=1e3]="PERMISSION_DENIED",e[e.NETWORK_ERROR=2e3]="NETWORK_ERROR",e[e.NO_HW_SUPPORT=3e3]="NO_HW_SUPPORT",e[e.INVALID_ARGUMENTS=4e3]="INVALID_ARGUMENTS",e[e.UNAUTHORIZED_USER_OPERATION=5e3]="UNAUTHORIZED_USER_OPERATION",e[e.INSUFFICIENT_RESOURCES=6e3]="INSUFFICIENT_RESOURCES",e[e.THROTTLE=7e3]="THROTTLE",e[e.USER_ABORT=8e3]="USER_ABORT",e[e.OPERATION_TIMED_OUT=8001]="OPERATION_TIMED_OUT",e[e.OLD_PLATFORM=9e3]="OLD_PLATFORM",e[e.FILE_NOT_FOUND=404]="FILE_NOT_FOUND",e[e.SIZE_EXCEEDED=1e4]="SIZE_EXCEEDED"}(t.ErrorCode||(t.ErrorCode={}))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sharing=t.video=t.people=t.monetization=t.meeting=t.location=t.media=t.ParentAppWindow=t.ChildAppWindow=t.tasks=t.settings=t.navigateToTab=t.navigateCrossDomain=t.navigateBack=t.returnFocus=t.shareDeepLink=t.setFrameContext=t.registerAppButtonHoverLeaveHandler=t.registerAppButtonHoverEnterHandler=t.registerAppButtonClickHandler=t.registerOnThemeChangeHandler=t.registerOnLoadHandler=t.registerFullScreenHandler=t.registerEnterSettingsHandler=t.registerFocusEnterHandler=t.registerBeforeUnloadHandler=t.registerBackButtonHandler=t.print=t.initializeWithFrameContext=t.initialize=t.getTabInstances=t.getMruTabInstances=t.getContext=t.executeDeepLink=t.enablePrintCapability=t.FileOpenPreference=t.ErrorCode=t.ChannelType=t.UserTeamRole=t.TeamType=t.TaskModuleDimension=t.HostClientType=t.FrameContexts=t.authentication=t.appInitialization=void 0;var r=n(25);Object.defineProperty(t,"appInitialization",{enumerable:!0,get:function(){return r.appInitialization}});var o=n(11);Object.defineProperty(t,"authentication",{enumerable:!0,get:function(){return o.authentication}});var i=n(2);Object.defineProperty(t,"FrameContexts",{enumerable:!0,get:function(){return i.FrameContexts}}),Object.defineProperty(t,"HostClientType",{enumerable:!0,get:function(){return i.HostClientType}}),Object.defineProperty(t,"TaskModuleDimension",{enumerable:!0,get:function(){return i.TaskModuleDimension}}),Object.defineProperty(t,"TeamType",{enumerable:!0,get:function(){return i.TeamType}}),Object.defineProperty(t,"UserTeamRole",{enumerable:!0,get:function(){return i.UserTeamRole}}),Object.defineProperty(t,"ChannelType",{enumerable:!0,get:function(){return i.ChannelType}});var a=n(7);Object.defineProperty(t,"ErrorCode",{enumerable:!0,get:function(){return a.ErrorCode}}),Object.defineProperty(t,"FileOpenPreference",{enumerable:!0,get:function(){return a.FileOpenPreference}});var s=n(26);Object.defineProperty(t,"enablePrintCapability",{enumerable:!0,get:function(){return s.enablePrintCapability}}),Object.defineProperty(t,"executeDeepLink",{enumerable:!0,get:function(){return s.executeDeepLink}}),Object.defineProperty(t,"getContext",{enumerable:!0,get:function(){return s.getContext}}),Object.defineProperty(t,"getMruTabInstances",{enumerable:!0,get:function(){return s.getMruTabInstances}}),Object.defineProperty(t,"getTabInstances",{enumerable:!0,get:function(){return s.getTabInstances}}),Object.defineProperty(t,"initialize",{enumerable:!0,get:function(){return s.initialize}}),Object.defineProperty(t,"initializeWithFrameContext",{enumerable:!0,get:function(){return s.initializeWithFrameContext}}),Object.defineProperty(t,"print",{enumerable:!0,get:function(){return s.print}}),Object.defineProperty(t,"registerBackButtonHandler",{enumerable:!0,get:function(){return s.registerBackButtonHandler}}),Object.defineProperty(t,"registerBeforeUnloadHandler",{enumerable:!0,get:function(){return s.registerBeforeUnloadHandler}}),Object.defineProperty(t,"registerFocusEnterHandler",{enumerable:!0,get:function(){return s.registerFocusEnterHandler}}),Object.defineProperty(t,"registerEnterSettingsHandler",{enumerable:!0,get:function(){return s.registerEnterSettingsHandler}}),Object.defineProperty(t,"registerFullScreenHandler",{enumerable:!0,get:function(){return s.registerFullScreenHandler}}),Object.defineProperty(t,"registerOnLoadHandler",{enumerable:!0,get:function(){return s.registerOnLoadHandler}}),Object.defineProperty(t,"registerOnThemeChangeHandler",{enumerable:!0,get:function(){return s.registerOnThemeChangeHandler}}),Object.defineProperty(t,"registerAppButtonClickHandler",{enumerable:!0,get:function(){return s.registerAppButtonClickHandler}}),Object.defineProperty(t,"registerAppButtonHoverEnterHandler",{enumerable:!0,get:function(){return s.registerAppButtonHoverEnterHandler}}),Object.defineProperty(t,"registerAppButtonHoverLeaveHandler",{enumerable:!0,get:function(){return s.registerAppButtonHoverLeaveHandler}}),Object.defineProperty(t,"setFrameContext",{enumerable:!0,get:function(){return s.setFrameContext}}),Object.defineProperty(t,"shareDeepLink",{enumerable:!0,get:function(){return s.shareDeepLink}});var l=n(27);Object.defineProperty(t,"returnFocus",{enumerable:!0,get:function(){return l.returnFocus}}),Object.defineProperty(t,"navigateBack",{enumerable:!0,get:function(){return l.navigateBack}}),Object.defineProperty(t,"navigateCrossDomain",{enumerable:!0,get:function(){return l.navigateCrossDomain}}),Object.defineProperty(t,"navigateToTab",{enumerable:!0,get:function(){return l.navigateToTab}});var u=n(12);Object.defineProperty(t,"settings",{enumerable:!0,get:function(){return u.settings}});var c=n(28);Object.defineProperty(t,"tasks",{enumerable:!0,get:function(){return c.tasks}});var d=n(16);Object.defineProperty(t,"ChildAppWindow",{enumerable:!0,get:function(){return d.ChildAppWindow}}),Object.defineProperty(t,"ParentAppWindow",{enumerable:!0,get:function(){return d.ParentAppWindow}});var f=n(17);Object.defineProperty(t,"media",{enumerable:!0,get:function(){return f.media}});var p=n(29);Object.defineProperty(t,"location",{enumerable:!0,get:function(){return p.location}});var m=n(30);Object.defineProperty(t,"meeting",{enumerable:!0,get:function(){return m.meeting}});var g=n(31);Object.defineProperty(t,"monetization",{enumerable:!0,get:function(){return g.monetization}});var h=n(32);Object.defineProperty(t,"people",{enumerable:!0,get:function(){return h.people}});var C=n(33);Object.defineProperty(t,"video",{enumerable:!0,get:function(){return C.video}});var b=n(34);Object.defineProperty(t,"sharing",{enumerable:!0,get:function(){return b.sharing}})},function(e,t){var n,r,o="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof window.msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto);o?(n=new Uint8Array(16),e.exports=function(){return o(n),n}):(r=new Array(16),e.exports=function(){for(var e,t=0;t<16;t++)0==(3&t)&&(e=4294967296*Math.random()),r[t]=e>>>((3&t)<<3)&255;return r})},function(e,t){for(var n=[],r=0;r<256;++r)n[r]=(r+256).toString(16).substr(1);e.exports=function(e,t){var r=t||0;return[(t=n)[e[r++]],t[e[r++]],t[e[r++]],t[e[r++]],"-",t[e[r++]],t[e[r++]],"-",t[e[r++]],t[e[r++]],"-",t[e[r++]],t[e[r++]],"-",t[e[r++]],t[e[r++]],t[e[r++]],t[e[r++]],t[e[r++]],t[e[+r]]].join("")}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.authentication=void 0;var r=n(1),o=n(6),i=n(2),a=n(0),s=n(3);!function(e){var t,n;function l(){u();try{a.Communication.childWindow&&a.Communication.childWindow.close()}finally{a.Communication.childWindow=null,a.Communication.childOrigin=null}}function u(){n&&(clearInterval(n),n=0),(0,s.removeHandler)("initialize"),(0,s.removeHandler)("navigateCrossDomain")}function c(){u(),n=a.Communication.currentWindow.setInterval((function(){if(!a.Communication.childWindow||a.Communication.childWindow.closed)f("CancelledByUser");else{var e=a.Communication.childOrigin;try{a.Communication.childOrigin="*",(0,a.sendMessageEventToChild)("ping")}finally{a.Communication.childOrigin=e}}}),100),(0,s.registerHandler)("initialize",(function(){return[i.FrameContexts.authentication,o.GlobalVars.hostClientType]})),(0,s.registerHandler)("navigateCrossDomain",(function(){return!1}))}function d(e){try{t&&t.successCallback&&t.successCallback(e)}finally{t=null,l()}}function f(e){try{t&&t.failureCallback&&t.failureCallback(e)}finally{t=null,l()}}function p(e,t,n){var r;e&&((r=document.createElement("a")).href=decodeURIComponent(e),r.host&&r.host!==window.location.host&&"outlook.office.com"===r.host&&-1<r.search.indexOf("client_type=Win32_Outlook")&&(t&&"result"===t&&(n&&(r.href=m(r.href,"result",n)),a.Communication.currentWindow.location.assign(m(r.href,"authSuccess",""))),t&&"reason"===t&&(n&&(r.href=m(r.href,"reason",n)),a.Communication.currentWindow.location.assign(m(r.href,"authFailure","")))))}function m(e,t,n){var r=e.indexOf("#"),o=(o=-1===r?"#":e.substr(r))+"&"+t+(""!==n?"="+n:"");return(e=-1===r?e:e.substr(0,r))+o}e.initialize=function(){(0,s.registerHandler)("authentication.authenticate.success",d,!1),(0,s.registerHandler)("authentication.authenticate.failure",f,!1)},e.registerAuthenticationHandlers=function(e){t=e},e.authenticate=function(e){var n=void 0!==e?e:t;(0,r.ensureInitialized)(i.FrameContexts.content,i.FrameContexts.sidePanel,i.FrameContexts.settings,i.FrameContexts.remove,i.FrameContexts.task,i.FrameContexts.stage,i.FrameContexts.meetingStage),o.GlobalVars.hostClientType===i.HostClientType.desktop||o.GlobalVars.hostClientType===i.HostClientType.android||o.GlobalVars.hostClientType===i.HostClientType.ios||o.GlobalVars.hostClientType===i.HostClientType.rigel||o.GlobalVars.hostClientType===i.HostClientType.teamsRoomsWindows||o.GlobalVars.hostClientType===i.HostClientType.teamsRoomsAndroid||o.GlobalVars.hostClientType===i.HostClientType.teamsPhones||o.GlobalVars.hostClientType===i.HostClientType.teamsDisplays?((e=document.createElement("a")).href=n.url,(0,a.sendMessageToParent)("authentication.authenticate",[e.href,n.width,n.height],(function(e,t){e?n.successCallback(t):n.failureCallback(t)}))):function(e){t=e,l();var n=t.width||600,r=t.height||400,o=(n=Math.min(n,a.Communication.currentWindow.outerWidth-400),r=Math.min(r,a.Communication.currentWindow.outerHeight-200),document.createElement("a"));o.href=t.url;var i=void 0!==a.Communication.currentWindow.screenLeft?a.Communication.currentWindow.screenLeft:a.Communication.currentWindow.screenX;e=void 0!==a.Communication.currentWindow.screenTop?a.Communication.currentWindow.screenTop:a.Communication.currentWindow.screenY,i+=a.Communication.currentWindow.outerWidth/2-n/2,e+=a.Communication.currentWindow.outerHeight/2-r/2,a.Communication.childWindow=a.Communication.currentWindow.open(o.href,"_blank","toolbar=no, location=yes, status=no, menubar=no, scrollbars=yes, top="+e+", left="+i+", width="+n+", height="+r),a.Communication.childWindow?c():f("FailedToOpenWindow")}(n)},e.getAuthToken=function(e){(0,r.ensureInitialized)(),(0,a.sendMessageToParent)("authentication.getAuthToken",[e.resources,e.claims,e.silent],(function(t,n){t?e.successCallback(n):e.failureCallback(n)}))},e.getUser=function(e){(0,r.ensureInitialized)(),(0,a.sendMessageToParent)("authentication.getUser",(function(t,n){t?e.successCallback(n):e.failureCallback(n)}))},e.notifySuccess=function(e,t){p(t,"result",e),(0,r.ensureInitialized)(i.FrameContexts.authentication),(0,a.sendMessageToParent)("authentication.authenticate.success",[e]),(0,a.waitForMessageQueue)(a.Communication.parentWindow,(function(){return setTimeout((function(){return a.Communication.currentWindow.close()}),200)}))},e.notifyFailure=function(e,t){p(t,"reason",e),(0,r.ensureInitialized)(i.FrameContexts.authentication),(0,a.sendMessageToParent)("authentication.authenticate.failure",[e]),(0,a.waitForMessageQueue)(a.Communication.parentWindow,(function(){return setTimeout((function(){return a.Communication.currentWindow.close()}),200)}))}}(t.authentication||(t.authentication={}))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.settings=void 0;var r=n(1),o=n(2),i=n(5),a=n(0),s=n(3);!function(e){var t,n;function l(e){e=new u(e),t?t(e):e.notifySuccess()}e.initialize=function(){(0,s.registerHandler)("settings.save",l,!1),(0,s.registerHandler)("settings.remove",c,!1)},e.setValidityState=function(e){(0,r.ensureInitialized)(o.FrameContexts.settings,o.FrameContexts.remove),(0,a.sendMessageToParent)("settings.setValidityState",[e])},e.getSettings=function(e){(0,r.ensureInitialized)(o.FrameContexts.content,o.FrameContexts.settings,o.FrameContexts.remove,o.FrameContexts.sidePanel),(0,a.sendMessageToParent)("settings.getSettings",e)},e.setSettings=function(e,t){(0,r.ensureInitialized)(o.FrameContexts.content,o.FrameContexts.settings,o.FrameContexts.sidePanel),(0,a.sendMessageToParent)("settings.setSettings",[e],t||(0,i.getGenericOnCompleteHandler)())},e.registerOnSaveHandler=function(e){(0,r.ensureInitialized)(o.FrameContexts.settings),(t=e)&&(0,a.sendMessageToParent)("registerHandler",["save"])},e.registerOnRemoveHandler=function(e){(0,r.ensureInitialized)(o.FrameContexts.remove,o.FrameContexts.settings),(n=e)&&(0,a.sendMessageToParent)("registerHandler",["remove"])};var u=function(){function e(e){this.notified=!1,this.result=e||{}}return e.prototype.notifySuccess=function(){this.ensureNotNotified(),(0,a.sendMessageToParent)("settings.save.success"),this.notified=!0},e.prototype.notifyFailure=function(e){this.ensureNotNotified(),(0,a.sendMessageToParent)("settings.save.failure",[e]),this.notified=!0},e.prototype.ensureNotNotified=function(){if(this.notified)throw new Error("The SaveEvent may only notify success or failure once.")},e}();function c(){var e=new d;n?n(e):e.notifySuccess()}var d=function(){function e(){this.notified=!1}return e.prototype.notifySuccess=function(){this.ensureNotNotified(),(0,a.sendMessageToParent)("settings.remove.success"),this.notified=!0},e.prototype.notifyFailure=function(e){this.ensureNotNotified(),(0,a.sendMessageToParent)("settings.remove.failure",[e]),this.notified=!0},e.prototype.ensureNotNotified=function(){if(this.notified)throw new Error("The removeEvent may only notify success or failure once.")},e}()}(t.settings||(t.settings={}))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.logs=void 0;var r=n(1),o=n(0),i=n(3);(t.logs||(t.logs={})).registerGetLogHandler=function(e){(0,r.ensureInitialized)(),e?(0,i.registerHandler)("log.request",(function(){var t=e();(0,o.sendMessageToParent)("log.receive",[t])})):(0,i.removeHandler)("log.request")}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.registerUserSettingsChangeHandler=t.getConfigSetting=t.getChatMembers=t.registerCustomHandler=t.sendCustomEvent=t.sendCustomMessage=t.uploadCustomApp=t.showNotification=t.openFilePreview=t.exitFullscreen=t.enterFullscreen=t.getUserJoinedTeams=t.initializePrivateApis=void 0;var r=n(1),o=n(2),i=n(5),a=n(0),s=n(15),l=n(3),u=n(6),c=n(7),d=n(4);t.initializePrivateApis=function(){s.menus.initialize()},t.getUserJoinedTeams=function(e,t){if((0,r.ensureInitialized)(),(u.GlobalVars.hostClientType===o.HostClientType.android||u.GlobalVars.hostClientType===o.HostClientType.teamsRoomsAndroid||u.GlobalVars.hostClientType===o.HostClientType.teamsPhones||u.GlobalVars.hostClientType===o.HostClientType.teamsDisplays)&&!(0,r.isAPISupportedByPlatform)(d.getUserJoinedTeamsSupportedAndroidClientVersion)){var n={errorCode:c.ErrorCode.OLD_PLATFORM};throw new Error(JSON.stringify(n))}(0,a.sendMessageToParent)("getUserJoinedTeams",[t],e)},t.enterFullscreen=function(){(0,r.ensureInitialized)(o.FrameContexts.content),(0,a.sendMessageToParent)("enterFullscreen",[])},t.exitFullscreen=function(){(0,r.ensureInitialized)(o.FrameContexts.content),(0,a.sendMessageToParent)("exitFullscreen",[])},t.openFilePreview=function(e){(0,r.ensureInitialized)(o.FrameContexts.content),e=[e.entityId,e.title,e.description,e.type,e.objectUrl,e.downloadUrl,e.webPreviewUrl,e.webEditUrl,e.baseUrl,e.editFile,e.subEntityId,e.viewerAction,e.fileOpenPreference,e.conversationId],(0,a.sendMessageToParent)("openFilePreview",e)},t.showNotification=function(e){(0,r.ensureInitialized)(o.FrameContexts.content),e=[e.message,e.notificationType],(0,a.sendMessageToParent)("showNotification",e)},t.uploadCustomApp=function(e,t){(0,r.ensureInitialized)(),(0,a.sendMessageToParent)("uploadCustomApp",[e],t||(0,i.getGenericOnCompleteHandler)())},t.sendCustomMessage=function(e,t,n){(0,r.ensureInitialized)(),(0,a.sendMessageToParent)(e,t,n)},t.sendCustomEvent=function(e,t){if((0,r.ensureInitialized)(),!a.Communication.childWindow)throw new Error("The child window has not yet been initialized or is not present");(0,a.sendMessageEventToChild)(e,t)},t.registerCustomHandler=function(e,t){var n=this;(0,r.ensureInitialized)(),(0,l.registerHandler)(e,(function(){for(var e=[],r=0;r<arguments.length;r++)e[r]=arguments[r];return t.apply(n,e)}))},t.getChatMembers=function(e){(0,r.ensureInitialized)(),(0,a.sendMessageToParent)("getChatMembers",e)},t.getConfigSetting=function(e,t){(0,r.ensureInitialized)(),(0,a.sendMessageToParent)("getConfigSetting",[t],e)},t.registerUserSettingsChangeHandler=function(e,t){(0,r.ensureInitialized)(),(0,l.registerHandler)("userSettingsChange",t,!0,[e])}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.menus=void 0;var r=n(1),o=n(0),i=n(3);!function(e){var t,n,a;function s(e){a&&a(e)||((0,r.ensureInitialized)(),(0,o.sendMessageToParent)("viewConfigItemPress",[e]))}function l(e){t&&t(e)||((0,r.ensureInitialized)(),(0,o.sendMessageToParent)("handleNavBarMenuItemPress",[e]))}function u(e){n&&n(e)||((0,r.ensureInitialized)(),(0,o.sendMessageToParent)("handleActionMenuItemPress",[e]))}e.MenuItem=function(){this.enabled=!0,this.selected=!1},function(e){e.dropDown="dropDown",e.popOver="popOver"}(e.MenuListType||(e.MenuListType={})),e.initialize=function(){(0,i.registerHandler)("navBarMenuItemPress",l,!1),(0,i.registerHandler)("actionMenuItemPress",u,!1),(0,i.registerHandler)("setModuleView",s,!1)},e.setUpViews=function(e,t){(0,r.ensureInitialized)(),a=t,(0,o.sendMessageToParent)("setUpViews",[e])},e.setNavBarMenu=function(e,n){(0,r.ensureInitialized)(),t=n,(0,o.sendMessageToParent)("setNavBarMenu",[e])},e.showActionMenu=function(e,t){(0,r.ensureInitialized)(),n=t,(0,o.sendMessageToParent)("showActionMenu",[e])}}(t.menus||(t.menus={}))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ParentAppWindow=t.ChildAppWindow=void 0;var r=n(1),o=n(2),i=n(5),a=n(0),s=n(3);n=function(){function e(){}return e.prototype.postMessage=function(e,t){(0,r.ensureInitialized)(),(0,a.sendMessageToParent)("messageForChild",[e],t||(0,i.getGenericOnCompleteHandler)())},e.prototype.addEventListener=function(e,t){"message"===e&&(0,s.registerHandler)("messageForParent",t)},e}(),t.ChildAppWindow=n,n=function(){function e(){}return Object.defineProperty(e,"Instance",{get:function(){return this._instance||(this._instance=new this)},enumerable:!1,configurable:!0}),e.prototype.postMessage=function(e,t){(0,r.ensureInitialized)(o.FrameContexts.task),(0,a.sendMessageToParent)("messageForParent",[e],t||(0,i.getGenericOnCompleteHandler)())},e.prototype.addEventListener=function(e,t){"message"===e&&(0,s.registerHandler)("messageForChild",t)},e}(),t.ParentAppWindow=n},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}();Object.defineProperty(t,"__esModule",{value:!0}),t.media=void 0;var o=n(6),i=n(7),a=n(1),s=n(2),l=n(5),u=n(18),c=n(0),d=n(3),f=n(4);!function(e){!function(e){e.Base64="base64",e.ID="id"}(e.FileFormat||(e.FileFormat={}));var t=function(){};e.File=t,e.captureImage=function(e){if(!e)throw new Error("[captureImage] Callback cannot be null");(0,a.ensureInitialized)(s.FrameContexts.content,s.FrameContexts.task),o.GlobalVars.isFramelessWindow?(0,a.isAPISupportedByPlatform)(f.captureImageMobileSupportVersion)?(0,c.sendMessageToParent)("captureImage",e):e({errorCode:i.ErrorCode.OLD_PLATFORM},void 0):e({errorCode:i.ErrorCode.NOT_SUPPORTED_ON_PLATFORM},void 0)};var n=function(e){function t(t){void 0===t&&(t=null);var n=e.call(this)||this;return t&&(n.content=t.content,n.format=t.format,n.mimeType=t.mimeType,n.name=t.name,n.preview=t.preview,n.size=t.size),n}return r(t,e),t.prototype.getMedia=function(e){if(!e)throw new Error("[get Media] Callback cannot be null");(0,a.ensureInitialized)(s.FrameContexts.content,s.FrameContexts.task),(0,a.isAPISupportedByPlatform)(f.mediaAPISupportVersion)?(0,u.validateGetMediaInputs)(this.mimeType,this.format,this.content)?(0,a.isAPISupportedByPlatform)(f.getMediaCallbackSupportVersion)?this.getMediaViaCallback(e):this.getMediaViaHandler(e):e({errorCode:i.ErrorCode.INVALID_ARGUMENTS},null):e({errorCode:i.ErrorCode.OLD_PLATFORM},null)},t.prototype.getMediaViaCallback=function(e){var t={mediaMimeType:this.mimeType,assembleAttachment:[]},n=[this.content];(0,c.sendMessageToParent)("getMedia",n,(function(n){var r;e&&(n&&n.error?e(n.error,null):n&&n.mediaChunk?n.mediaChunk.chunkSequence<=0?(r=(0,u.createFile)(t.assembleAttachment,t.mediaMimeType),e(n.error,r)):(n=(0,u.decodeAttachment)(n.mediaChunk,t.mediaMimeType),t.assembleAttachment.push(n)):e({errorCode:i.ErrorCode.INTERNAL_ERROR,message:"data received is null"},null))}))},t.prototype.getMediaViaHandler=function(e){var t=(0,l.generateGUID)(),n={mediaMimeType:this.mimeType,assembleAttachment:[]},r=[t,this.content];this.content&&e&&(0,c.sendMessageToParent)("getMedia",r),(0,d.registerHandler)("getMedia"+t,(function(r){var o;e&&((o=JSON.parse(r)).error?(e(o.error,null),(0,d.removeHandler)("getMedia"+t)):o.mediaChunk?o.mediaChunk.chunkSequence<=0?(r=(0,u.createFile)(n.assembleAttachment,n.mediaMimeType),e(o.error,r),(0,d.removeHandler)("getMedia"+t)):(o=(0,u.decodeAttachment)(o.mediaChunk,n.mediaMimeType),n.assembleAttachment.push(o)):(e({errorCode:i.ErrorCode.INTERNAL_ERROR,message:"data received is null"},null),(0,d.removeHandler)("getMedia"+t)))}))},t}(t);e.Media=n,function(e){e[e.Photo=1]="Photo",e[e.Document=2]="Document",e[e.Whiteboard=3]="Whiteboard",e[e.BusinessCard=4]="BusinessCard"}(e.CameraStartMode||(e.CameraStartMode={})),function(e){e[e.Camera=1]="Camera",e[e.Gallery=2]="Gallery"}(e.Source||(e.Source={})),function(e){e[e.Image=1]="Image",e[e.VideoAndImage=3]="VideoAndImage",e[e.Audio=4]="Audio"}(e.MediaType||(e.MediaType={})),function(e){e[e.ID=1]="ID",e[e.URL=2]="URL"}(e.ImageUriType||(e.ImageUriType={})),e.selectMedia=function(e,t){if(!t)throw new Error("[select Media] Callback cannot be null");if((0,a.ensureInitialized)(s.FrameContexts.content,s.FrameContexts.task),(0,a.isAPISupportedByPlatform)(f.mediaAPISupportVersion)){if((0,u.isMediaCallForVideoAndImageInputs)(e)){if(o.GlobalVars.hostClientType!=s.HostClientType.android&&o.GlobalVars.hostClientType!=s.HostClientType.ios){var r={errorCode:i.ErrorCode.NOT_SUPPORTED_ON_PLATFORM};return void t(r,null)}if(!(0,a.isAPISupportedByPlatform)(f.videoAndImageMediaAPISupportVersion))return l={errorCode:i.ErrorCode.OLD_PLATFORM},void t(l,null)}(0,u.validateSelectMediaInputs)(e)?(0,c.sendMessageToParent)("selectMedia",[e],(function(e,r){if(r){for(var o=[],i=0,a=r;i<a.length;i++){var s=a[i];o.push(new n(s))}t(e,o)}else t(e,null)})):(e={errorCode:i.ErrorCode.INVALID_ARGUMENTS},t(e,null))}else{var l={errorCode:i.ErrorCode.OLD_PLATFORM};t(l,null)}},e.viewImages=function(e,t){if(!t)throw new Error("[view images] Callback cannot be null");(0,a.ensureInitialized)(s.FrameContexts.content,s.FrameContexts.task),(0,a.isAPISupportedByPlatform)(f.mediaAPISupportVersion)?(0,u.validateViewImagesInput)(e)?(0,c.sendMessageToParent)("viewImages",[e],t):t({errorCode:i.ErrorCode.INVALID_ARGUMENTS}):t({errorCode:i.ErrorCode.OLD_PLATFORM})},e.scanBarCode=function(e,t){if(!e)throw new Error("[media.scanBarCode] Callback cannot be null");(0,a.ensureInitialized)(s.FrameContexts.content,s.FrameContexts.task),o.GlobalVars.hostClientType!==s.HostClientType.desktop&&o.GlobalVars.hostClientType!==s.HostClientType.web&&o.GlobalVars.hostClientType!==s.HostClientType.rigel&&o.GlobalVars.hostClientType!==s.HostClientType.teamsRoomsWindows&&o.GlobalVars.hostClientType!==s.HostClientType.teamsRoomsAndroid&&o.GlobalVars.hostClientType!==s.HostClientType.teamsPhones&&o.GlobalVars.hostClientType!==s.HostClientType.teamsDisplays?(0,a.isAPISupportedByPlatform)(f.scanBarCodeAPIMobileSupportVersion)?(0,u.validateScanBarCodeInput)(t)?(0,c.sendMessageToParent)("media.scanBarCode",[t],e):e({errorCode:i.ErrorCode.INVALID_ARGUMENTS},null):e({errorCode:i.ErrorCode.OLD_PLATFORM},null):e({errorCode:i.ErrorCode.NOT_SUPPORTED_ON_PLATFORM},null)}}(t.media||(t.media={}))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.validatePeoplePickerInput=t.validateScanBarCodeInput=t.validateViewImagesInput=t.validateGetMediaInputs=t.isMediaCallForVideoAndImageInputs=t.validateSelectMediaInputs=t.decodeAttachment=t.createFile=void 0;var r=n(17);t.createFile=function(e,t){if(null==e||null==t||e.length<=0)return null;var n,r=1;return e.sort((function(e,t){return e.sequence>t.sequence?1:-1})),e.forEach((function(e){e.sequence==r&&(n=n?new Blob([n,e.file],{type:t}):new Blob([e.file],{type:t}),r++)})),n},t.decodeAttachment=function(e,t){if(null==e||null==t)return null;for(var n=atob(e.chunk),r=new Array(n.length),o=0;o<n.length;o++)r[o]=n.charCodeAt(o);var i=new Uint8Array(r);return t=new Blob([i],{type:t}),{sequence:e.chunkSequence,file:t}},t.validateSelectMediaInputs=function(e){return!(null==e||10<e.maxMediaCount)},t.isMediaCallForVideoAndImageInputs=function(e){return!(!e||e.mediaType!=r.media.MediaType.VideoAndImage&&!e.videoAndImageProps)},t.validateGetMediaInputs=function(e,t,n){return null!=e&&null!=t&&t==r.media.FileFormat.ID&&null!=n},t.validateViewImagesInput=function(e){return!(null==e||e.length<=0||10<e.length)},t.validateScanBarCodeInput=function(e){return!e||!(null===e.timeOutIntervalInSec||e.timeOutIntervalInSec<=0||60<e.timeOutIntervalInSec)},t.validatePeoplePickerInput=function(e){if(e){if(e.title&&"string"!=typeof e.title)return!1;if(e.setSelected&&"object"!=typeof e.setSelected)return!1;if(e.openOrgWideSearchInChatOrChannel&&"boolean"!=typeof e.openOrgWideSearchInChatOrChannel)return!1;if(e.singleSelect&&"boolean"!=typeof e.singleSelect)return!1}return!0}},function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){e[r=void 0===r?n:r]=t[n]}),o=this&&this.__exportStar||function(e,t){for(var n in e)"default"===n||Object.prototype.hasOwnProperty.call(t,n)||r(t,e,n)};Object.defineProperty(t,"__esModule",{value:!0}),o(n(20),t),o(n(8),t)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.teams=t.appEntity=t.files=t.remoteCamera=t.meetingRoom=t.conversations=t.registerUserSettingsChangeHandler=t.uploadCustomApp=t.registerCustomHandler=t.sendCustomEvent=t.showNotification=t.sendCustomMessage=t.openFilePreview=t.getUserJoinedTeams=t.getConfigSetting=t.getChatMembers=t.exitFullscreen=t.enterFullscreen=t.UserSettingTypes=t.ViewerActionTypes=t.NotificationTypes=t.logs=t.menus=t.bot=void 0;var r=n(21);Object.defineProperty(t,"bot",{enumerable:!0,get:function(){return r.bot}});var o=n(15);Object.defineProperty(t,"menus",{enumerable:!0,get:function(){return o.menus}});var i=n(13);Object.defineProperty(t,"logs",{enumerable:!0,get:function(){return i.logs}});var a=n(35);Object.defineProperty(t,"NotificationTypes",{enumerable:!0,get:function(){return a.NotificationTypes}}),Object.defineProperty(t,"ViewerActionTypes",{enumerable:!0,get:function(){return a.ViewerActionTypes}}),Object.defineProperty(t,"UserSettingTypes",{enumerable:!0,get:function(){return a.UserSettingTypes}});var s=n(14);Object.defineProperty(t,"enterFullscreen",{enumerable:!0,get:function(){return s.enterFullscreen}}),Object.defineProperty(t,"exitFullscreen",{enumerable:!0,get:function(){return s.exitFullscreen}}),Object.defineProperty(t,"getChatMembers",{enumerable:!0,get:function(){return s.getChatMembers}}),Object.defineProperty(t,"getConfigSetting",{enumerable:!0,get:function(){return s.getConfigSetting}}),Object.defineProperty(t,"getUserJoinedTeams",{enumerable:!0,get:function(){return s.getUserJoinedTeams}}),Object.defineProperty(t,"openFilePreview",{enumerable:!0,get:function(){return s.openFilePreview}}),Object.defineProperty(t,"sendCustomMessage",{enumerable:!0,get:function(){return s.sendCustomMessage}}),Object.defineProperty(t,"showNotification",{enumerable:!0,get:function(){return s.showNotification}}),Object.defineProperty(t,"sendCustomEvent",{enumerable:!0,get:function(){return s.sendCustomEvent}}),Object.defineProperty(t,"registerCustomHandler",{enumerable:!0,get:function(){return s.registerCustomHandler}}),Object.defineProperty(t,"uploadCustomApp",{enumerable:!0,get:function(){return s.uploadCustomApp}}),Object.defineProperty(t,"registerUserSettingsChangeHandler",{enumerable:!0,get:function(){return s.registerUserSettingsChangeHandler}});var l=n(36);Object.defineProperty(t,"conversations",{enumerable:!0,get:function(){return l.conversations}});var u=n(37);Object.defineProperty(t,"meetingRoom",{enumerable:!0,get:function(){return u.meetingRoom}});var c=n(38);Object.defineProperty(t,"remoteCamera",{enumerable:!0,get:function(){return c.remoteCamera}});var d=n(39);Object.defineProperty(t,"files",{enumerable:!0,get:function(){return d.files}});var f=n(40);Object.defineProperty(t,"appEntity",{enumerable:!0,get:function(){return f.appEntity}});var p=n(41);Object.defineProperty(t,"teams",{enumerable:!0,get:function(){return p.teams}})},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.bot=void 0;var r=n(0),o=n(1);!function(e){e.sendQuery=function(e,t,n){(0,o.ensureInitialized)(),(0,r.sendMessageToParent)("bot.executeQuery",[e],(function(e,r){(e?t:n)(r)}))},e.getSupportedCommands=function(e,t){(0,o.ensureInitialized)(),(0,r.sendMessageToParent)("bot.getSupportedCommands",(function(n,r){(n?e:t)(r)}))},e.authenticate=function(e,t,n){(0,o.ensureInitialized)(),(0,r.sendMessageToParent)("bot.authenticate",[e],(function(e,r){(e?t:n)(r)}))},function(e){e.Results="Results",e.Auth="Auth"}(e.ResponseType||(e.ResponseType={}))}(t.bot||(t.bot={}))},function(e,t,n){var r=n(23),o=n(24);(n=o).v1=r,n.v4=o,e.exports=n},function(e,t,n){var r,o,i=n(9),a=n(10),s=0,l=0;e.exports=function(e,t,n){var u=t&&n||0,c=t||[],d=(e=e||{}).node||r,f=void 0!==e.clockseq?e.clockseq:o;null!=d&&null!=f||(m=i(),null==d&&(d=r=[1|m[0],m[1],m[2],m[3],m[4],m[5]]),null==f&&(f=o=16383&(m[6]<<8|m[7])));var p=void 0!==e.msecs?e.msecs:(new Date).getTime(),m=(n=void 0!==e.nsecs?e.nsecs:l+1,p-s+(n-l)/1e4);if(m<0&&void 0===e.clockseq&&(f=f+1&16383),1e4<=(n=(m<0||s<p)&&void 0===e.nsecs?0:n))throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");s=p,o=f,n=(1e4*(268435455&(p+=122192928e5))+(l=n))%4294967296,c[u++]=n>>>24&255,c[u++]=n>>>16&255,c[u++]=n>>>8&255,c[u++]=255&n,p=p/4294967296*1e4&268435455,c[u++]=p>>>8&255,c[u++]=255&p,c[u++]=p>>>24&15|16,c[u++]=p>>>16&255,c[u++]=f>>>8|128,c[u++]=255&f;for(var g=0;g<6;++g)c[u+g]=d[g];return t||a(c)}},function(e,t,n){var r=n(9),o=n(10);e.exports=function(e,t,n){var i=t&&n||0;"string"==typeof e&&(t="binary"===e?new Array(16):null,e=null);var a=(e=e||{}).random||(e.rng||r)();if(a[6]=15&a[6]|64,a[8]=63&a[8]|128,t)for(var s=0;s<16;++s)t[i+s]=a[s];return t||o(a)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.appInitialization=void 0;var r=n(1),o=n(4),i=n(0);!function(e){e.Messages={AppLoaded:"appInitialization.appLoaded",Success:"appInitialization.success",Failure:"appInitialization.failure",ExpectedFailure:"appInitialization.expectedFailure"},function(e){e.AuthFailed="AuthFailed",e.Timeout="Timeout",e.Other="Other"}(e.FailedReason||(e.FailedReason={})),function(e){e.PermissionError="PermissionError",e.NotFound="NotFound",e.Throttling="Throttling",e.Offline="Offline",e.Other="Other"}(e.ExpectedFailureReason||(e.ExpectedFailureReason={})),e.notifyAppLoaded=function(){(0,r.ensureInitialized)(),(0,i.sendMessageToParent)(e.Messages.AppLoaded,[o.version])},e.notifySuccess=function(){(0,r.ensureInitialized)(),(0,i.sendMessageToParent)(e.Messages.Success,[o.version])},e.notifyFailure=function(t){(0,r.ensureInitialized)(),(0,i.sendMessageToParent)(e.Messages.Failure,[t.reason,t.message])},e.notifyExpectedFailure=function(t){(0,r.ensureInitialized)(),(0,i.sendMessageToParent)(e.Messages.ExpectedFailure,[t.reason,t.message])}}(t.appInitialization||(t.appInitialization={}))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.initializeWithFrameContext=t.setFrameContext=t.executeDeepLink=t.shareDeepLink=t.getMruTabInstances=t.getTabInstances=t.registerEnterSettingsHandler=t.registerFocusEnterHandler=t.registerBeforeUnloadHandler=t.registerOnLoadHandler=t.registerBackButtonHandler=t.registerAppButtonHoverLeaveHandler=t.registerAppButtonHoverEnterHandler=t.registerAppButtonClickHandler=t.registerFullScreenHandler=t.registerOnThemeChangeHandler=t.getContext=t.print=t.enablePrintCapability=t._uninitialize=t._initialize=t.initialize=void 0;var r=n(1),o=n(6),i=n(4),a=n(12),s=n(5),l=n(13),u=n(2),c=n(0),d=n(11),f=n(14),p=n(3);function m(e,t){o.GlobalVars.initializeCalled||(o.GlobalVars.initializeCalled=!0,p.initializeHandlers(),(0,c.initializeCommunication)((function(e,t,n){void 0===n&&(n=i.defaultSDKVersionForCompatCheck),o.GlobalVars.frameContext=e,o.GlobalVars.hostClientType=t,o.GlobalVars.clientSupportedSDKVersion=n,o.GlobalVars.initializeCallbacks.forEach((function(e){return e()})),o.GlobalVars.initializeCallbacks=[],o.GlobalVars.initializeCompleted=!0}),t),d.authentication.initialize(),a.settings.initialize(),(0,f.initializePrivateApis)()),Array.isArray(t)&&(0,r.processAdditionalValidOrigins)(t),e&&(o.GlobalVars.initializeCompleted?e():o.GlobalVars.initializeCallbacks.push(e))}function g(){window.print()}function h(e){(0,r.ensureInitialized)(),p.registerOnThemeChangeHandler(e)}function C(e){(0,r.ensureInitialized)(),p.registerHandler("fullScreenChange",e)}function b(e){(0,r.ensureInitialized)(),p.registerBackButtonHandler(e)}function v(e){(0,r.ensureInitialized)(),p.registerOnLoadHandler(e)}function y(e){(0,r.ensureInitialized)(),p.registerBeforeUnloadHandler(e)}function P(e){(0,r.ensureInitialized)(),p.registerFocusEnterHandler(e)}function T(e){(0,r.ensureInitialized)(u.FrameContexts.content),(0,c.sendMessageToParent)("setFrameContext",[e])}t.initialize=m,t._initialize=function(e){c.Communication.currentWindow=e},t._uninitialize=function(){o.GlobalVars.initializeCalled&&(o.GlobalVars.frameContext&&(h(null),C(null),b(null),y(null),P(null),v(null),l.logs.registerGetLogHandler(null)),o.GlobalVars.frameContext===u.FrameContexts.settings&&a.settings.registerOnSaveHandler(null),o.GlobalVars.frameContext===u.FrameContexts.remove&&a.settings.registerOnRemoveHandler(null),o.GlobalVars.initializeCalled=!1,o.GlobalVars.initializeCompleted=!1,o.GlobalVars.initializeCallbacks=[],o.GlobalVars.additionalValidOrigins=[],o.GlobalVars.frameContext=null,o.GlobalVars.hostClientType=null,(o.GlobalVars.isFramelessWindow=!1,c.uninitializeCommunication)())},t.enablePrintCapability=function(){o.GlobalVars.printCapabilityEnabled||(o.GlobalVars.printCapabilityEnabled=!0,(0,r.ensureInitialized)(),document.addEventListener("keydown",(function(e){(e.ctrlKey||e.metaKey)&&80===e.keyCode&&(g(),e.cancelBubble=!0,e.preventDefault(),e.stopImmediatePropagation())})))},t.print=g,t.getContext=function(e){(0,r.ensureInitialized)(),(0,c.sendMessageToParent)("getContext",(function(t){t.frameContext||(t.frameContext=o.GlobalVars.frameContext),e(t)}))},t.registerOnThemeChangeHandler=h,t.registerFullScreenHandler=C,t.registerAppButtonClickHandler=function(e){(0,r.ensureInitialized)(u.FrameContexts.content),p.registerHandler("appButtonClick",e)},t.registerAppButtonHoverEnterHandler=function(e){(0,r.ensureInitialized)(u.FrameContexts.content),p.registerHandler("appButtonHoverEnter",e)},t.registerAppButtonHoverLeaveHandler=function(e){(0,r.ensureInitialized)(u.FrameContexts.content),p.registerHandler("appButtonHoverLeave",e)},t.registerBackButtonHandler=b,t.registerOnLoadHandler=v,t.registerBeforeUnloadHandler=y,t.registerFocusEnterHandler=P,t.registerEnterSettingsHandler=function(e){(0,r.ensureInitialized)(u.FrameContexts.content),p.registerHandler("changeSettings",e)},t.getTabInstances=function(e,t){(0,r.ensureInitialized)(),(0,c.sendMessageToParent)("getTabInstances",[t],e)},t.getMruTabInstances=function(e,t){(0,r.ensureInitialized)(),(0,c.sendMessageToParent)("getMruTabInstances",[t],e)},t.shareDeepLink=function(e){(0,r.ensureInitialized)(u.FrameContexts.content,u.FrameContexts.sidePanel,u.FrameContexts.meetingStage),(0,c.sendMessageToParent)("shareDeepLink",[e.subEntityId,e.subEntityLabel,e.subEntityWebUrl])},t.executeDeepLink=function(e,t){(0,r.ensureInitialized)(u.FrameContexts.content,u.FrameContexts.sidePanel,u.FrameContexts.settings,u.FrameContexts.task,u.FrameContexts.stage,u.FrameContexts.meetingStage),(0,c.sendMessageToParent)("executeDeepLink",[e],t||(0,s.getGenericOnCompleteHandler)())},t.setFrameContext=T,t.initializeWithFrameContext=function(e,t,n){m(t,n),T(e)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.navigateBack=t.navigateCrossDomain=t.navigateToTab=t.returnFocus=void 0;var r=n(1),o=n(5),i=n(2),a=n(0);t.returnFocus=function(e){(0,r.ensureInitialized)(i.FrameContexts.content),(0,a.sendMessageToParent)("returnFocus",[e])},t.navigateToTab=function(e,t){(0,r.ensureInitialized)(),(0,a.sendMessageToParent)("navigateToTab",[e],t||(0,o.getGenericOnCompleteHandler)("Invalid internalTabInstanceId and/or channelId were/was provided"))},t.navigateCrossDomain=function(e,t){(0,r.ensureInitialized)(i.FrameContexts.content,i.FrameContexts.sidePanel,i.FrameContexts.settings,i.FrameContexts.remove,i.FrameContexts.task,i.FrameContexts.stage,i.FrameContexts.meetingStage),(0,a.sendMessageToParent)("navigateCrossDomain",[e],t||(0,o.getGenericOnCompleteHandler)("Cross-origin navigation is only supported for URLs matching the pattern registered in the manifest."))},t.navigateBack=function(e){(0,r.ensureInitialized)(),(0,a.sendMessageToParent)("navigateBack",[],e||(0,o.getGenericOnCompleteHandler)("Back navigation is not supported in the current client or context."))}},function(e,t,n){"use strict";var r=this&&this.__rest||function(e,t){var n={};for(o in e)Object.prototype.hasOwnProperty.call(e,o)&&t.indexOf(o)<0&&(n[o]=e[o]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols)for(var r=0,o=Object.getOwnPropertySymbols(e);r<o.length;r++)t.indexOf(o[r])<0&&Object.prototype.propertyIsEnumerable.call(e,o[r])&&(n[o[r]]=e[o[r]]);return n};Object.defineProperty(t,"__esModule",{value:!0}),t.tasks=void 0;var o=n(2),i=n(16),a=n(0),s=n(1);!function(e){e.startTask=function(e,t){return(0,s.ensureInitialized)(o.FrameContexts.content,o.FrameContexts.sidePanel,o.FrameContexts.meetingStage),(0,a.sendMessageToParent)("tasks.startTask",[e],t),new i.ChildAppWindow},e.updateTask=function(e){(0,s.ensureInitialized)(o.FrameContexts.task),e.width,e.height;var t=r(e,["width","height"]);if(Object.keys(t).length)throw new Error("updateTask requires a taskInfo argument containing only width and height");(0,a.sendMessageToParent)("tasks.updateTask",[e])},e.submitTask=function(e,t){(0,s.ensureInitialized)(o.FrameContexts.task),(0,a.sendMessageToParent)("tasks.completeTask",[e,Array.isArray(t)?t:[t]])}}(t.tasks||(t.tasks={}))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.location=void 0;var r=n(7),o=n(1),i=n(2),a=n(0),s=n(4);!function(e){e.getLocation=function(e,t){if(!t)throw new Error("[location.getLocation] Callback cannot be null");(0,o.ensureInitialized)(i.FrameContexts.content,i.FrameContexts.task),(0,o.isAPISupportedByPlatform)(s.locationAPIsRequiredVersion)?e?(0,a.sendMessageToParent)("location.getLocation",[e],t):t({errorCode:r.ErrorCode.INVALID_ARGUMENTS},void 0):t({errorCode:r.ErrorCode.OLD_PLATFORM},void 0)},e.showLocation=function(e,t){if(!t)throw new Error("[location.showLocation] Callback cannot be null");(0,o.ensureInitialized)(i.FrameContexts.content,i.FrameContexts.task),(0,o.isAPISupportedByPlatform)(s.locationAPIsRequiredVersion)?e?(0,a.sendMessageToParent)("location.showLocation",[e],t):t({errorCode:r.ErrorCode.INVALID_ARGUMENTS},void 0):t({errorCode:r.ErrorCode.OLD_PLATFORM},void 0)}}(t.location||(t.location={}))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.meeting=void 0;var r=n(0),o=n(3),i=n(1),a=n(2);!function(e){!function(e){e.Unknown="Unknown",e.Adhoc="Adhoc",e.Scheduled="Scheduled",e.Recurring="Recurring",e.Broadcast="Broadcast",e.MeetNow="MeetNow"}(e.MeetingType||(e.MeetingType={})),e.getIncomingClientAudioState=function(e){if(!e)throw new Error("[get incoming client audio state] Callback cannot be null");(0,i.ensureInitialized)(a.FrameContexts.sidePanel,a.FrameContexts.meetingStage),(0,r.sendMessageToParent)("getIncomingClientAudioState",e)},e.toggleIncomingClientAudio=function(e){if(!e)throw new Error("[toggle incoming client audio] Callback cannot be null");(0,i.ensureInitialized)(a.FrameContexts.sidePanel,a.FrameContexts.meetingStage),(0,r.sendMessageToParent)("toggleIncomingClientAudio",e)},e.getMeetingDetails=function(e){if(!e)throw new Error("[get meeting details] Callback cannot be null");(0,i.ensureInitialized)(a.FrameContexts.sidePanel,a.FrameContexts.meetingStage,a.FrameContexts.settings,a.FrameContexts.content),(0,r.sendMessageToParent)("meeting.getMeetingDetails",e)},e.getAuthenticationTokenForAnonymousUser=function(e){if(!e)throw new Error("[get Authentication Token For AnonymousUser] Callback cannot be null");(0,i.ensureInitialized)(a.FrameContexts.sidePanel,a.FrameContexts.meetingStage),(0,r.sendMessageToParent)("meeting.getAuthenticationTokenForAnonymousUser",e)},e.getLiveStreamState=function(e){if(!e)throw new Error("[get live stream state] Callback cannot be null");(0,i.ensureInitialized)(a.FrameContexts.sidePanel),(0,r.sendMessageToParent)("meeting.getLiveStreamState",e)},e.requestStartLiveStreaming=function(e,t,n){if(!e)throw new Error("[request start live streaming] Callback cannot be null");(0,i.ensureInitialized)(a.FrameContexts.sidePanel),(0,r.sendMessageToParent)("meeting.requestStartLiveStreaming",[t,n],e)},e.requestStopLiveStreaming=function(e){if(!e)throw new Error("[request stop live streaming] Callback cannot be null");(0,i.ensureInitialized)(a.FrameContexts.sidePanel),(0,r.sendMessageToParent)("meeting.requestStopLiveStreaming",e)},e.registerLiveStreamChangedHandler=function(e){if(!e)throw new Error("[register live stream changed handler] Handler cannot be null");(0,i.ensureInitialized)(a.FrameContexts.sidePanel),(0,o.registerHandler)("meeting.liveStreamChanged",e)},e.shareAppContentToStage=function(e,t){if(!e)throw new Error("[share app content to stage] Callback cannot be null");(0,i.ensureInitialized)(a.FrameContexts.sidePanel),(0,r.sendMessageToParent)("meeting.shareAppContentToStage",[t],e)},e.getAppContentStageSharingCapabilities=function(e){if(!e)throw new Error("[get app content stage sharing capabilities] Callback cannot be null");(0,i.ensureInitialized)(a.FrameContexts.sidePanel),(0,r.sendMessageToParent)("meeting.getAppContentStageSharingCapabilities",e)},e.stopSharingAppContentToStage=function(e){if(!e)throw new Error("[stop sharing app content to stage] Callback cannot be null");(0,i.ensureInitialized)(a.FrameContexts.sidePanel),(0,r.sendMessageToParent)("meeting.stopSharingAppContentToStage",e)},e.getAppContentStageSharingState=function(e){if(!e)throw new Error("[get app content stage sharing state] Callback cannot be null");(0,i.ensureInitialized)(a.FrameContexts.sidePanel),(0,r.sendMessageToParent)("meeting.getAppContentStageSharingState",e)}}(t.meeting||(t.meeting={}))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.monetization=void 0;var r=n(0),o=n(1),i=n(2);(t.monetization||(t.monetization={})).openPurchaseExperience=function(e,t){if(!e)throw new Error("[open purchase experience] Callback cannot be null");(0,o.ensureInitialized)(i.FrameContexts.content),(0,r.sendMessageToParent)("monetization.openPurchaseExperience",[t],e)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.people=void 0;var r=n(1),o=n(2),i=n(7),a=n(18),s=n(0),l=n(4);(t.people||(t.people={})).selectPeople=function(e,t){if(!e)throw new Error("[people picker] Callback cannot be null");(0,r.ensureInitialized)(o.FrameContexts.content,o.FrameContexts.task,o.FrameContexts.settings),(0,r.isAPISupportedByPlatform)(l.peoplePickerRequiredVersion)?(0,a.validatePeoplePickerInput)(t)?(0,s.sendMessageToParent)("people.selectPeople",[t],e):e({errorCode:i.ErrorCode.INVALID_ARGUMENTS},null):e({errorCode:i.ErrorCode.OLD_PLATFORM},void 0)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.video=void 0;var r=n(0),o=n(1),i=n(2),a=n(3);!function(e){function t(){(0,r.sendMessageToParent)("video.videoFrameProcessed")}function n(e){(0,r.sendMessageToParent)("video.notifyError",[e])}!function(e){e[e.NV12=0]="NV12"}(e.VideoFrameFormat||(e.VideoFrameFormat={})),function(e){e[e.EffectChanged=0]="EffectChanged",e[e.EffectDisabled=1]="EffectDisabled"}(e.EffectChangeType||(e.EffectChangeType={})),e.registerForVideoFrame=function(e,s){(0,o.ensureInitialized)(i.FrameContexts.sidePanel),(0,a.registerHandler)("video.newVideoFrame",(function(r){void 0!==r&&e(r,t,n)})),(0,r.sendMessageToParent)("video.registerForVideoFrame",[s])},e.notifySelectedVideoEffectChanged=function(e,t){(0,o.ensureInitialized)(i.FrameContexts.sidePanel),(0,r.sendMessageToParent)("video.videoEffectChanged",[e,t])},e.registerForVideoEffect=function(e){(0,o.ensureInitialized)(i.FrameContexts.sidePanel),(0,a.registerHandler)("video.effectParameterChange",e)}}(t.video||(t.video={}))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sharing=void 0;var r=n(1),o=n(0),i=n(7),a=n(2);!function(e){e.SharingAPIMessages={shareWebContent:"sharing.shareWebContent"},e.shareWebContent=function(t,n){(function(e,t){if(e&&e.content&&e.content.length)return 1;t&&t({errorCode:i.ErrorCode.INVALID_ARGUMENTS,message:"Shared content is missing"})})(t,n)&&function(e,t){if(e.content.some((function(e){return!e.type})))t&&t({errorCode:i.ErrorCode.INVALID_ARGUMENTS,message:"Shared content type cannot be undefined"});else{if(!e.content.some((function(t){return t.type!==e.content[0].type})))return 1;t&&t({errorCode:i.ErrorCode.INVALID_ARGUMENTS,message:"Shared content must be of the same type"})}}(t,n)&&function(e,t){if("URL"===e.content[0].type){if(!e.content.some((function(e){return!e.url})))return 1;t&&t({errorCode:i.ErrorCode.INVALID_ARGUMENTS,message:"URLs are required for URL content types"})}else t&&t({errorCode:i.ErrorCode.INVALID_ARGUMENTS,message:"Content type is unsupported"})}(t,n)&&((0,r.ensureInitialized)(a.FrameContexts.content,a.FrameContexts.sidePanel,a.FrameContexts.task,a.FrameContexts.stage,a.FrameContexts.meetingStage),(0,o.sendMessageToParent)(e.SharingAPIMessages.shareWebContent,[t],n))}}(t.sharing||(t.sharing={}))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.UserSettingTypes=t.ViewerActionTypes=t.NotificationTypes=void 0,function(e){e.fileDownloadStart="fileDownloadStart",e.fileDownloadComplete="fileDownloadComplete"}(t.NotificationTypes||(t.NotificationTypes={})),function(e){e.view="view",e.edit="edit",e.editNew="editNew"}(t.ViewerActionTypes||(t.ViewerActionTypes={})),function(e){e.fileOpenPreference="fileOpenPreference",e.theme="theme"}(t.UserSettingTypes||(t.UserSettingTypes={}))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.conversations=void 0;var r=n(1),o=n(2),i=n(0),a=n(3);!function(e){e.openConversation=function(e){(0,r.ensureInitialized)(o.FrameContexts.content),(0,i.sendMessageToParent)("conversations.openConversation",[{title:e.title,subEntityId:e.subEntityId,conversationId:e.conversationId,channelId:e.channelId,entityId:e.entityId}],(function(e,t){if(!e)throw new Error(t)})),e.onStartConversation&&(0,a.registerHandler)("startConversation",(function(t,n,r,o){return e.onStartConversation({subEntityId:t,conversationId:n,channelId:r,entityId:o})})),e.onCloseConversation&&(0,a.registerHandler)("closeConversation",(function(t,n,r,o){return e.onCloseConversation({subEntityId:t,conversationId:n,channelId:r,entityId:o})}))},e.closeConversation=function(){(0,r.ensureInitialized)(o.FrameContexts.content),(0,i.sendMessageToParent)("conversations.closeConversation"),(0,a.removeHandler)("startConversation"),(0,a.removeHandler)("closeConversation")}}(t.conversations||(t.conversations={}))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.meetingRoom=void 0;var r=n(1),o=n(0),i=n(3);!function(e){!function(e){e.toggleMute="toggleMute",e.toggleCamera="toggleCamera",e.toggleCaptions="toggleCaptions",e.volume="volume",e.showVideoGallery="showVideoGallery",e.showContent="showContent",e.showVideoGalleryAndContent="showVideoGalleryAndContent",e.showLargeGallery="showLargeGallery",e.showTogether="showTogether",e.leaveMeeting="leaveMeeting"}(e.Capability||(e.Capability={})),e.getPairedMeetingRoomInfo=function(e){(0,r.ensureInitialized)(),(0,o.sendMessageToParent)("meetingRoom.getPairedMeetingRoomInfo",e)},e.sendCommandToPairedMeetingRoom=function(e,t){if(!e||0==e.length)throw new Error("[meetingRoom.sendCommandToPairedMeetingRoom] Command name cannot be null or empty");if(!t)throw new Error("[meetingRoom.sendCommandToPairedMeetingRoom] Callback cannot be null");(0,r.ensureInitialized)(),(0,o.sendMessageToParent)("meetingRoom.sendCommandToPairedMeetingRoom",[e],t)},e.registerMeetingRoomCapabilitiesUpdateHandler=function(e){if(!e)throw new Error("[meetingRoom.registerMeetingRoomCapabilitiesUpdateHandler] Handler cannot be null");(0,r.ensureInitialized)(),(0,i.registerHandler)("meetingRoom.meetingRoomCapabilitiesUpdate",(function(t){(0,r.ensureInitialized)(),e(t)}))},e.registerMeetingRoomStatesUpdateHandler=function(e){if(!e)throw new Error("[meetingRoom.registerMeetingRoomStatesUpdateHandler] Handler cannot be null");(0,r.ensureInitialized)(),(0,i.registerHandler)("meetingRoom.meetingRoomStatesUpdate",(function(t){(0,r.ensureInitialized)(),e(t)}))}}(t.meetingRoom||(t.meetingRoom={}))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.remoteCamera=void 0;var r=n(1),o=n(2),i=n(0),a=n(3);!function(e){!function(e){e.Reset="Reset",e.ZoomIn="ZoomIn",e.ZoomOut="ZoomOut",e.PanLeft="PanLeft",e.PanRight="PanRight",e.TiltUp="TiltUp",e.TiltDown="TiltDown"}(e.ControlCommand||(e.ControlCommand={})),function(e){e[e.CommandResetError=0]="CommandResetError",e[e.CommandZoomInError=1]="CommandZoomInError",e[e.CommandZoomOutError=2]="CommandZoomOutError",e[e.CommandPanLeftError=3]="CommandPanLeftError",e[e.CommandPanRightError=4]="CommandPanRightError",e[e.CommandTiltUpError=5]="CommandTiltUpError",e[e.CommandTiltDownError=6]="CommandTiltDownError",e[e.SendDataError=7]="SendDataError"}(e.ErrorReason||(e.ErrorReason={})),function(e){e[e.None=0]="None",e[e.ControlDenied=1]="ControlDenied",e[e.ControlNoResponse=2]="ControlNoResponse",e[e.ControlBusy=3]="ControlBusy",e[e.AckTimeout=4]="AckTimeout",e[e.ControlTerminated=5]="ControlTerminated",e[e.ControllerTerminated=6]="ControllerTerminated",e[e.DataChannelError=7]="DataChannelError",e[e.ControllerCancelled=8]="ControllerCancelled",e[e.ControlDisabled=9]="ControlDisabled",e[e.ControlTerminatedToAllowOtherController=10]="ControlTerminatedToAllowOtherController"}(e.SessionTerminatedReason||(e.SessionTerminatedReason={})),e.getCapableParticipants=function(e){if(!e)throw new Error("[remoteCamera.getCapableParticipants] Callback cannot be null");(0,r.ensureInitialized)(o.FrameContexts.sidePanel),(0,i.sendMessageToParent)("remoteCamera.getCapableParticipants",e)},e.requestControl=function(e,t){if(!e)throw new Error("[remoteCamera.requestControl] Participant cannot be null");if(!t)throw new Error("[remoteCamera.requestControl] Callback cannot be null");(0,r.ensureInitialized)(o.FrameContexts.sidePanel),(0,i.sendMessageToParent)("remoteCamera.requestControl",[e],t)},e.sendControlCommand=function(e,t){if(!e)throw new Error("[remoteCamera.sendControlCommand] ControlCommand cannot be null");if(!t)throw new Error("[remoteCamera.sendControlCommand] Callback cannot be null");(0,r.ensureInitialized)(o.FrameContexts.sidePanel),(0,i.sendMessageToParent)("remoteCamera.sendControlCommand",[e],t)},e.terminateSession=function(e){if(!e)throw new Error("[remoteCamera.terminateSession] Callback cannot be null");(0,r.ensureInitialized)(o.FrameContexts.sidePanel),(0,i.sendMessageToParent)("remoteCamera.terminateSession",e)},e.registerOnCapableParticipantsChangeHandler=function(e){if(!e)throw new Error("[remoteCamera.registerOnCapableParticipantsChangeHandler] Handler cannot be null");(0,r.ensureInitialized)(o.FrameContexts.sidePanel),(0,a.registerHandler)("remoteCamera.capableParticipantsChange",e)},e.registerOnErrorHandler=function(e){if(!e)throw new Error("[remoteCamera.registerOnErrorHandler] Handler cannot be null");(0,r.ensureInitialized)(o.FrameContexts.sidePanel),(0,a.registerHandler)("remoteCamera.handlerError",e)},e.registerOnDeviceStateChangeHandler=function(e){if(!e)throw new Error("[remoteCamera.registerOnDeviceStateChangeHandler] Handler cannot be null");(0,r.ensureInitialized)(o.FrameContexts.sidePanel),(0,a.registerHandler)("remoteCamera.deviceStateChange",e)},e.registerOnSessionStatusChangeHandler=function(e){if(!e)throw new Error("[remoteCamera.registerOnSessionStatusChangeHandler] Handler cannot be null");(0,r.ensureInitialized)(o.FrameContexts.sidePanel),(0,a.registerHandler)("remoteCamera.sessionStatusChange",e)}}(t.remoteCamera||(t.remoteCamera={}))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.files=void 0;var r=n(0),o=n(1),i=n(8);!function(e){!function(e){e.Dropbox="DROPBOX",e.Box="BOX",e.Sharefile="SHAREFILE",e.GoogleDrive="GOOGLEDRIVE",e.Egnyte="EGNYTE"}(e.CloudStorageProvider||(e.CloudStorageProvider={})),function(e){e[e.Sharepoint=0]="Sharepoint",e[e.WopiIntegration=1]="WopiIntegration",e[e.Google=2]="Google"}(e.CloudStorageProviderType||(e.CloudStorageProviderType={})),e.getCloudStorageFolders=function(e,t){if((0,o.ensureInitialized)(i.FrameContexts.content),!e||0==e.length)throw new Error("[files.getCloudStorageFolders] channelId name cannot be null or empty");if(!t)throw new Error("[files.getCloudStorageFolders] Callback cannot be null");(0,r.sendMessageToParent)("files.getCloudStorageFolders",[e],t)},e.addCloudStorageFolder=function(e,t){if((0,o.ensureInitialized)(i.FrameContexts.content),!e||0==e.length)throw new Error("[files.addCloudStorageFolder] channelId name cannot be null or empty");if(!t)throw new Error("[files.addCloudStorageFolder] Callback cannot be null");(0,r.sendMessageToParent)("files.addCloudStorageFolder",[e],t)},e.deleteCloudStorageFolder=function(e,t,n){if((0,o.ensureInitialized)(i.FrameContexts.content),!e)throw new Error("[files.deleteCloudStorageFolder] channelId name cannot be null or empty");if(!t)throw new Error("[files.deleteCloudStorageFolder] folderToDelete cannot be null or empty");if(!n)throw new Error("[files.deleteCloudStorageFolder] Callback cannot be null");(0,r.sendMessageToParent)("files.deleteCloudStorageFolder",[e,t],n)},e.getCloudStorageFolderContents=function(e,t,n){if((0,o.ensureInitialized)(i.FrameContexts.content),!e||!t)throw new Error("[files.getCloudStorageFolderContents] folder/providerCode name cannot be null or empty");if(!n)throw new Error("[files.getCloudStorageFolderContents] Callback cannot be null");if("isSubdirectory"in e&&!e.isSubdirectory)throw new Error("[files.getCloudStorageFolderContents] provided folder is not a subDirectory");(0,r.sendMessageToParent)("files.getCloudStorageFolderContents",[e,t],n)},e.openCloudStorageFile=function(e,t,n){if((0,o.ensureInitialized)(i.FrameContexts.content),!e||!t)throw new Error("[files.openCloudStorageFile] file/providerCode cannot be null or empty");if(e.isSubdirectory)throw new Error("[files.openCloudStorageFile] provided file is a subDirectory");(0,r.sendMessageToParent)("files.openCloudStorageFile",[e,t,n])}}(t.files||(t.files={}))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.appEntity=void 0;var r=n(0),o=n(1),i=n(8);(t.appEntity||(t.appEntity={})).selectAppEntity=function(e,t,n,a){if((0,o.ensureInitialized)(i.FrameContexts.content),!e||0==e.length)throw new Error("[appEntity.selectAppEntity] threadId name cannot be null or empty");if(!a)throw new Error("[appEntity.selectAppEntity] Callback cannot be null");(0,r.sendMessageToParent)("appEntity.selectAppEntity",[e,t,n],a)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.teams=void 0;var r=n(0),o=n(1),i=n(8);!function(e){!function(e){e[e.Regular=0]="Regular",e[e.Private=1]="Private",e[e.Shared=2]="Shared"}(e.ChannelType||(e.ChannelType={})),e.getTeamChannels=function(e,t){if((0,o.ensureInitialized)(i.FrameContexts.content),!e)throw new Error("[teams.getTeamChannels] groupId cannot be null or empty");if(!t)throw new Error("[teams.getTeamChannels] Callback cannot be null");(0,r.sendMessageToParent)("teams.getTeamChannels",[e],t)},e.refreshSiteUrl=function(e,t){if((0,o.ensureInitialized)(),!e)throw new Error("[teams.refreshSiteUrl] threadId cannot be null or empty");if(!t)throw new Error("[teams.refreshSiteUrl] Callback cannot be null");(0,r.sendMessageToParent)("teams.refreshSiteUrl",[e],t)}}(t.teams||(t.teams={}))}])},669:(e,t,n)=>{e.exports=n(609)},448:(e,t,n)=>{"use strict";var r=n(867),o=n(26),i=n(372),a=n(327),s=n(97),l=n(109),u=n(985),c=n(61);e.exports=function(e){return new Promise((function(t,n){var d=e.data,f=e.headers,p=e.responseType;r.isFormData(d)&&delete f["Content-Type"];var m=new XMLHttpRequest;if(e.auth){var g=e.auth.username||"",h=e.auth.password?unescape(encodeURIComponent(e.auth.password)):"";f.Authorization="Basic "+btoa(g+":"+h)}var C=s(e.baseURL,e.url);function b(){if(m){var r="getAllResponseHeaders"in m?l(m.getAllResponseHeaders()):null,i={data:p&&"text"!==p&&"json"!==p?m.response:m.responseText,status:m.status,statusText:m.statusText,headers:r,config:e,request:m};o(t,n,i),m=null}}if(m.open(e.method.toUpperCase(),a(C,e.params,e.paramsSerializer),!0),m.timeout=e.timeout,"onloadend"in m?m.onloadend=b:m.onreadystatechange=function(){m&&4===m.readyState&&(0!==m.status||m.responseURL&&0===m.responseURL.indexOf("file:"))&&setTimeout(b)},m.onabort=function(){m&&(n(c("Request aborted",e,"ECONNABORTED",m)),m=null)},m.onerror=function(){n(c("Network Error",e,null,m)),m=null},m.ontimeout=function(){var t="timeout of "+e.timeout+"ms exceeded";e.timeoutErrorMessage&&(t=e.timeoutErrorMessage),n(c(t,e,e.transitional&&e.transitional.clarifyTimeoutError?"ETIMEDOUT":"ECONNABORTED",m)),m=null},r.isStandardBrowserEnv()){var v=(e.withCredentials||u(C))&&e.xsrfCookieName?i.read(e.xsrfCookieName):void 0;v&&(f[e.xsrfHeaderName]=v)}"setRequestHeader"in m&&r.forEach(f,(function(e,t){void 0===d&&"content-type"===t.toLowerCase()?delete f[t]:m.setRequestHeader(t,e)})),r.isUndefined(e.withCredentials)||(m.withCredentials=!!e.withCredentials),p&&"json"!==p&&(m.responseType=e.responseType),"function"==typeof e.onDownloadProgress&&m.addEventListener("progress",e.onDownloadProgress),"function"==typeof e.onUploadProgress&&m.upload&&m.upload.addEventListener("progress",e.onUploadProgress),e.cancelToken&&e.cancelToken.promise.then((function(e){m&&(m.abort(),n(e),m=null)})),d||(d=null),m.send(d)}))}},609:(e,t,n)=>{"use strict";var r=n(867),o=n(849),i=n(321),a=n(185);function s(e){var t=new i(e),n=o(i.prototype.request,t);return r.extend(n,i.prototype,t),r.extend(n,t),n}var l=s(n(655));l.Axios=i,l.create=function(e){return s(a(l.defaults,e))},l.Cancel=n(263),l.CancelToken=n(972),l.isCancel=n(502),l.all=function(e){return Promise.all(e)},l.spread=n(713),l.isAxiosError=n(268),e.exports=l,e.exports.default=l},263:e=>{"use strict";function t(e){this.message=e}t.prototype.toString=function(){return"Cancel"+(this.message?": "+this.message:"")},t.prototype.__CANCEL__=!0,e.exports=t},972:(e,t,n)=>{"use strict";var r=n(263);function o(e){if("function"!=typeof e)throw new TypeError("executor must be a function.");var t;this.promise=new Promise((function(e){t=e}));var n=this;e((function(e){n.reason||(n.reason=new r(e),t(n.reason))}))}o.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},o.source=function(){var e;return{token:new o((function(t){e=t})),cancel:e}},e.exports=o},502:e=>{"use strict";e.exports=function(e){return!(!e||!e.__CANCEL__)}},321:(e,t,n)=>{"use strict";var r=n(867),o=n(327),i=n(782),a=n(572),s=n(185),l=n(875),u=l.validators;function c(e){this.defaults=e,this.interceptors={request:new i,response:new i}}c.prototype.request=function(e){"string"==typeof e?(e=arguments[1]||{}).url=arguments[0]:e=e||{},(e=s(this.defaults,e)).method?e.method=e.method.toLowerCase():this.defaults.method?e.method=this.defaults.method.toLowerCase():e.method="get";var t=e.transitional;void 0!==t&&l.assertOptions(t,{silentJSONParsing:u.transitional(u.boolean,"1.0.0"),forcedJSONParsing:u.transitional(u.boolean,"1.0.0"),clarifyTimeoutError:u.transitional(u.boolean,"1.0.0")},!1);var n=[],r=!0;this.interceptors.request.forEach((function(t){"function"==typeof t.runWhen&&!1===t.runWhen(e)||(r=r&&t.synchronous,n.unshift(t.fulfilled,t.rejected))}));var o,i=[];if(this.interceptors.response.forEach((function(e){i.push(e.fulfilled,e.rejected)})),!r){var c=[a,void 0];for(Array.prototype.unshift.apply(c,n),c=c.concat(i),o=Promise.resolve(e);c.length;)o=o.then(c.shift(),c.shift());return o}for(var d=e;n.length;){var f=n.shift(),p=n.shift();try{d=f(d)}catch(e){p(e);break}}try{o=a(d)}catch(e){return Promise.reject(e)}for(;i.length;)o=o.then(i.shift(),i.shift());return o},c.prototype.getUri=function(e){return e=s(this.defaults,e),o(e.url,e.params,e.paramsSerializer).replace(/^\?/,"")},r.forEach(["delete","get","head","options"],(function(e){c.prototype[e]=function(t,n){return this.request(s(n||{},{method:e,url:t,data:(n||{}).data}))}})),r.forEach(["post","put","patch"],(function(e){c.prototype[e]=function(t,n,r){return this.request(s(r||{},{method:e,url:t,data:n}))}})),e.exports=c},782:(e,t,n)=>{"use strict";var r=n(867);function o(){this.handlers=[]}o.prototype.use=function(e,t,n){return this.handlers.push({fulfilled:e,rejected:t,synchronous:!!n&&n.synchronous,runWhen:n?n.runWhen:null}),this.handlers.length-1},o.prototype.eject=function(e){this.handlers[e]&&(this.handlers[e]=null)},o.prototype.forEach=function(e){r.forEach(this.handlers,(function(t){null!==t&&e(t)}))},e.exports=o},97:(e,t,n)=>{"use strict";var r=n(793),o=n(2);e.exports=function(e,t){return e&&!r(t)?o(e,t):t}},61:(e,t,n)=>{"use strict";var r=n(481);e.exports=function(e,t,n,o,i){var a=new Error(e);return r(a,t,n,o,i)}},572:(e,t,n)=>{"use strict";var r=n(867),o=n(527),i=n(502),a=n(655);function s(e){e.cancelToken&&e.cancelToken.throwIfRequested()}e.exports=function(e){return s(e),e.headers=e.headers||{},e.data=o.call(e,e.data,e.headers,e.transformRequest),e.headers=r.merge(e.headers.common||{},e.headers[e.method]||{},e.headers),r.forEach(["delete","get","head","post","put","patch","common"],(function(t){delete e.headers[t]})),(e.adapter||a.adapter)(e).then((function(t){return s(e),t.data=o.call(e,t.data,t.headers,e.transformResponse),t}),(function(t){return i(t)||(s(e),t&&t.response&&(t.response.data=o.call(e,t.response.data,t.response.headers,e.transformResponse))),Promise.reject(t)}))}},481:e=>{"use strict";e.exports=function(e,t,n,r,o){return e.config=t,n&&(e.code=n),e.request=r,e.response=o,e.isAxiosError=!0,e.toJSON=function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code}},e}},185:(e,t,n)=>{"use strict";var r=n(867);e.exports=function(e,t){t=t||{};var n={},o=["url","method","data"],i=["headers","auth","proxy","params"],a=["baseURL","transformRequest","transformResponse","paramsSerializer","timeout","timeoutMessage","withCredentials","adapter","responseType","xsrfCookieName","xsrfHeaderName","onUploadProgress","onDownloadProgress","decompress","maxContentLength","maxBodyLength","maxRedirects","transport","httpAgent","httpsAgent","cancelToken","socketPath","responseEncoding"],s=["validateStatus"];function l(e,t){return r.isPlainObject(e)&&r.isPlainObject(t)?r.merge(e,t):r.isPlainObject(t)?r.merge({},t):r.isArray(t)?t.slice():t}function u(o){r.isUndefined(t[o])?r.isUndefined(e[o])||(n[o]=l(void 0,e[o])):n[o]=l(e[o],t[o])}r.forEach(o,(function(e){r.isUndefined(t[e])||(n[e]=l(void 0,t[e]))})),r.forEach(i,u),r.forEach(a,(function(o){r.isUndefined(t[o])?r.isUndefined(e[o])||(n[o]=l(void 0,e[o])):n[o]=l(void 0,t[o])})),r.forEach(s,(function(r){r in t?n[r]=l(e[r],t[r]):r in e&&(n[r]=l(void 0,e[r]))}));var c=o.concat(i).concat(a).concat(s),d=Object.keys(e).concat(Object.keys(t)).filter((function(e){return-1===c.indexOf(e)}));return r.forEach(d,u),n}},26:(e,t,n)=>{"use strict";var r=n(61);e.exports=function(e,t,n){var o=n.config.validateStatus;n.status&&o&&!o(n.status)?t(r("Request failed with status code "+n.status,n.config,null,n.request,n)):e(n)}},527:(e,t,n)=>{"use strict";var r=n(867),o=n(655);e.exports=function(e,t,n){var i=this||o;return r.forEach(n,(function(n){e=n.call(i,e,t)})),e}},655:(e,t,n)=>{"use strict";var r=n(867),o=n(16),i=n(481),a={"Content-Type":"application/x-www-form-urlencoded"};function s(e,t){!r.isUndefined(e)&&r.isUndefined(e["Content-Type"])&&(e["Content-Type"]=t)}var l,u={transitional:{silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1},adapter:(("undefined"!=typeof XMLHttpRequest||"undefined"!=typeof process&&"[object process]"===Object.prototype.toString.call(process))&&(l=n(448)),l),transformRequest:[function(e,t){return o(t,"Accept"),o(t,"Content-Type"),r.isFormData(e)||r.isArrayBuffer(e)||r.isBuffer(e)||r.isStream(e)||r.isFile(e)||r.isBlob(e)?e:r.isArrayBufferView(e)?e.buffer:r.isURLSearchParams(e)?(s(t,"application/x-www-form-urlencoded;charset=utf-8"),e.toString()):r.isObject(e)||t&&"application/json"===t["Content-Type"]?(s(t,"application/json"),function(e,t,n){if(r.isString(e))try{return(0,JSON.parse)(e),r.trim(e)}catch(e){if("SyntaxError"!==e.name)throw e}return(0,JSON.stringify)(e)}(e)):e}],transformResponse:[function(e){var t=this.transitional,n=t&&t.silentJSONParsing,o=t&&t.forcedJSONParsing,a=!n&&"json"===this.responseType;if(a||o&&r.isString(e)&&e.length)try{return JSON.parse(e)}catch(e){if(a){if("SyntaxError"===e.name)throw i(e,this,"E_JSON_PARSE");throw e}}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,validateStatus:function(e){return e>=200&&e<300},headers:{common:{Accept:"application/json, text/plain, */*"}}};r.forEach(["delete","get","head"],(function(e){u.headers[e]={}})),r.forEach(["post","put","patch"],(function(e){u.headers[e]=r.merge(a)})),e.exports=u},849:e=>{"use strict";e.exports=function(e,t){return function(){for(var n=new Array(arguments.length),r=0;r<n.length;r++)n[r]=arguments[r];return e.apply(t,n)}}},327:(e,t,n)=>{"use strict";var r=n(867);function o(e){return encodeURIComponent(e).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}e.exports=function(e,t,n){if(!t)return e;var i;if(n)i=n(t);else if(r.isURLSearchParams(t))i=t.toString();else{var a=[];r.forEach(t,(function(e,t){null!=e&&(r.isArray(e)?t+="[]":e=[e],r.forEach(e,(function(e){r.isDate(e)?e=e.toISOString():r.isObject(e)&&(e=JSON.stringify(e)),a.push(o(t)+"="+o(e))})))})),i=a.join("&")}if(i){var s=e.indexOf("#");-1!==s&&(e=e.slice(0,s)),e+=(-1===e.indexOf("?")?"?":"&")+i}return e}},2:e=>{"use strict";e.exports=function(e,t){return t?e.replace(/\/+$/,"")+"/"+t.replace(/^\/+/,""):e}},372:(e,t,n)=>{"use strict";var r=n(867);e.exports=r.isStandardBrowserEnv()?{write:function(e,t,n,o,i,a){var s=[];s.push(e+"="+encodeURIComponent(t)),r.isNumber(n)&&s.push("expires="+new Date(n).toGMTString()),r.isString(o)&&s.push("path="+o),r.isString(i)&&s.push("domain="+i),!0===a&&s.push("secure"),document.cookie=s.join("; ")},read:function(e){var t=document.cookie.match(new RegExp("(^|;\\s*)("+e+")=([^;]*)"));return t?decodeURIComponent(t[3]):null},remove:function(e){this.write(e,"",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}}},793:e=>{"use strict";e.exports=function(e){return/^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(e)}},268:e=>{"use strict";e.exports=function(e){return"object"==typeof e&&!0===e.isAxiosError}},985:(e,t,n)=>{"use strict";var r=n(867);e.exports=r.isStandardBrowserEnv()?function(){var e,t=/(msie|trident)/i.test(navigator.userAgent),n=document.createElement("a");function o(e){var r=e;return t&&(n.setAttribute("href",r),r=n.href),n.setAttribute("href",r),{href:n.href,protocol:n.protocol?n.protocol.replace(/:$/,""):"",host:n.host,search:n.search?n.search.replace(/^\?/,""):"",hash:n.hash?n.hash.replace(/^#/,""):"",hostname:n.hostname,port:n.port,pathname:"/"===n.pathname.charAt(0)?n.pathname:"/"+n.pathname}}return e=o(window.location.href),function(t){var n=r.isString(t)?o(t):t;return n.protocol===e.protocol&&n.host===e.host}}():function(){return!0}},16:(e,t,n)=>{"use strict";var r=n(867);e.exports=function(e,t){r.forEach(e,(function(n,r){r!==t&&r.toUpperCase()===t.toUpperCase()&&(e[t]=n,delete e[r])}))}},109:(e,t,n)=>{"use strict";var r=n(867),o=["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"];e.exports=function(e){var t,n,i,a={};return e?(r.forEach(e.split("\n"),(function(e){if(i=e.indexOf(":"),t=r.trim(e.substr(0,i)).toLowerCase(),n=r.trim(e.substr(i+1)),t){if(a[t]&&o.indexOf(t)>=0)return;a[t]="set-cookie"===t?(a[t]?a[t]:[]).concat([n]):a[t]?a[t]+", "+n:n}})),a):a}},713:e=>{"use strict";e.exports=function(e){return function(t){return e.apply(null,t)}}},875:(e,t,n)=>{"use strict";var r=n(593),o={};["object","boolean","number","function","string","symbol"].forEach((function(e,t){o[e]=function(n){return typeof n===e||"a"+(t<1?"n ":" ")+e}}));var i={},a=r.version.split(".");function s(e,t){for(var n=t?t.split("."):a,r=e.split("."),o=0;o<3;o++){if(n[o]>r[o])return!0;if(n[o]<r[o])return!1}return!1}o.transitional=function(e,t,n){var o=t&&s(t);function a(e,t){return"[Axios v"+r.version+"] Transitional option '"+e+"'"+t+(n?". "+n:"")}return function(n,r,s){if(!1===e)throw new Error(a(r," has been removed in "+t));return o&&!i[r]&&(i[r]=!0,console.warn(a(r," has been deprecated since v"+t+" and will be removed in the near future"))),!e||e(n,r,s)}},e.exports={isOlderVersion:s,assertOptions:function(e,t,n){if("object"!=typeof e)throw new TypeError("options must be an object");for(var r=Object.keys(e),o=r.length;o-- >0;){var i=r[o],a=t[i];if(a){var s=e[i],l=void 0===s||a(s,i,e);if(!0!==l)throw new TypeError("option "+i+" must be "+l)}else if(!0!==n)throw Error("Unknown option "+i)}},validators:o}},867:(e,t,n)=>{"use strict";var r=n(849),o=Object.prototype.toString;function i(e){return"[object Array]"===o.call(e)}function a(e){return void 0===e}function s(e){return null!==e&&"object"==typeof e}function l(e){if("[object Object]"!==o.call(e))return!1;var t=Object.getPrototypeOf(e);return null===t||t===Object.prototype}function u(e){return"[object Function]"===o.call(e)}function c(e,t){if(null!=e)if("object"!=typeof e&&(e=[e]),i(e))for(var n=0,r=e.length;n<r;n++)t.call(null,e[n],n,e);else for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&t.call(null,e[o],o,e)}e.exports={isArray:i,isArrayBuffer:function(e){return"[object ArrayBuffer]"===o.call(e)},isBuffer:function(e){return null!==e&&!a(e)&&null!==e.constructor&&!a(e.constructor)&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)},isFormData:function(e){return"undefined"!=typeof FormData&&e instanceof FormData},isArrayBufferView:function(e){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer&&e.buffer instanceof ArrayBuffer},isString:function(e){return"string"==typeof e},isNumber:function(e){return"number"==typeof e},isObject:s,isPlainObject:l,isUndefined:a,isDate:function(e){return"[object Date]"===o.call(e)},isFile:function(e){return"[object File]"===o.call(e)},isBlob:function(e){return"[object Blob]"===o.call(e)},isFunction:u,isStream:function(e){return s(e)&&u(e.pipe)},isURLSearchParams:function(e){return"undefined"!=typeof URLSearchParams&&e instanceof URLSearchParams},isStandardBrowserEnv:function(){return("undefined"==typeof navigator||"ReactNative"!==navigator.product&&"NativeScript"!==navigator.product&&"NS"!==navigator.product)&&"undefined"!=typeof window&&"undefined"!=typeof document},forEach:c,merge:function e(){var t={};function n(n,r){l(t[r])&&l(n)?t[r]=e(t[r],n):l(n)?t[r]=e({},n):i(n)?t[r]=n.slice():t[r]=n}for(var r=0,o=arguments.length;r<o;r++)c(arguments[r],n);return t},extend:function(e,t,n){return c(t,(function(t,o){e[o]=n&&"function"==typeof t?r(t,n):t})),e},trim:function(e){return e.trim?e.trim():e.replace(/^\s+|\s+$/g,"")},stripBOM:function(e){return 65279===e.charCodeAt(0)&&(e=e.slice(1)),e}}},681:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t};Object.defineProperty(t,"__esModule",{value:!0});const a=i(n(303)),s=i(n(669));var l="null";function u(e){e&&(document.body.className="theme-"+("default"===e?"light":e))}function c(){var e=document.getElementById("tabChoice"),t=e.options[e.selectedIndex].value;return window.location.protocol+"//"+window.location.host+"/"+t}window.onload=function(){console.log("cliked"),document.getElementById("testbutton").onclick=()=>{var e;console.log("cyan"+l),e={key:l,message:"HI I AM NOTIFICATION"},s.default.post(`${window.location.origin}/api/notify`,e);var t=document.getElementById("testdiv");"none"===t.style.display?(t.style.display="block",console.log("yellow")):t.style.display="none"}},a.initialize(),a.getContext((function(e){void 0!==e.userPrincipalName&&(l=e.userPrincipalName,e&&e.theme&&u(e.theme))})),a.registerOnThemeChangeHandler((function(e){u(e)})),a.settings.registerOnSaveHandler((function(e){a.settings.setSettings({contentUrl:c(),entityId:c()}),e.notifySuccess()})),document.addEventListener("DOMContentLoaded",(function(){var e=document.getElementById("tabChoice");e&&(e.onchange=function(){var t=e.options[e.selectedIndex].value;a.settings.setValidityState("first"===t||"second"===t)})}))},593:e=>{"use strict";e.exports=JSON.parse('{"name":"axios","version":"0.21.4","description":"Promise based HTTP client for the browser and node.js","main":"index.js","scripts":{"test":"grunt test","start":"node ./sandbox/server.js","build":"NODE_ENV=production grunt build","preversion":"npm test","version":"npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json","postversion":"git push && git push --tags","examples":"node ./examples/server.js","coveralls":"cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js","fix":"eslint --fix lib/**/*.js"},"repository":{"type":"git","url":"https://github.com/axios/axios.git"},"keywords":["xhr","http","ajax","promise","node"],"author":"Matt Zabriskie","license":"MIT","bugs":{"url":"https://github.com/axios/axios/issues"},"homepage":"https://axios-http.com","devDependencies":{"coveralls":"^3.0.0","es6-promise":"^4.2.4","grunt":"^1.3.0","grunt-banner":"^0.6.0","grunt-cli":"^1.2.0","grunt-contrib-clean":"^1.1.0","grunt-contrib-watch":"^1.0.0","grunt-eslint":"^23.0.0","grunt-karma":"^4.0.0","grunt-mocha-test":"^0.13.3","grunt-ts":"^6.0.0-beta.19","grunt-webpack":"^4.0.2","istanbul-instrumenter-loader":"^1.0.0","jasmine-core":"^2.4.1","karma":"^6.3.2","karma-chrome-launcher":"^3.1.0","karma-firefox-launcher":"^2.1.0","karma-jasmine":"^1.1.1","karma-jasmine-ajax":"^0.1.13","karma-safari-launcher":"^1.0.0","karma-sauce-launcher":"^4.3.6","karma-sinon":"^1.0.5","karma-sourcemap-loader":"^0.3.8","karma-webpack":"^4.0.2","load-grunt-tasks":"^3.5.2","minimist":"^1.2.0","mocha":"^8.2.1","sinon":"^4.5.0","terser-webpack-plugin":"^4.2.3","typescript":"^4.0.5","url-search-params":"^0.10.0","webpack":"^4.44.2","webpack-dev-server":"^3.11.0"},"browser":{"./lib/adapters/http.js":"./lib/adapters/xhr.js"},"jsdelivr":"dist/axios.min.js","unpkg":"dist/axios.min.js","typings":"./index.d.ts","dependencies":{"follow-redirects":"^1.14.0"},"bundlesize":[{"path":"./dist/axios.min.js","threshold":"5kB"}]}')}},t={};!function n(r){var o=t[r];if(void 0!==o)return o.exports;var i=t[r]={exports:{}};return e[r].call(i.exports,i,i.exports,n),i.exports}(681)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,